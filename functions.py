import numpy as np
import math
import Code_Number_Converter

def function(char, oldvariables, epsilon):
    # in the SABOOK L and F are numbers that represent die Fractal Dimension F = logs2(N1/N2) = sum log2(df/dx)/N 1-L1/L2 and the Lyapunov Dimension L
    variables = None
    
    aa = []
    aa = Code_Number_Converter.Converted_Number(char)
    a = np.empty((len(aa)+1,1))
    a[0] = (0)
    for i in range(len(aa)):
        a[i+1] = aa[i]
        
    # A = 1D quadratic map
    if char[0] == "A":
        x = oldvariables[0]
        X = a[1] + a[2]*x + a[3]*np.power(x,2)
        variables = (X)
    # B = 1D cubic map
    if char[0] == "B":
        x = oldvariables[0]
        X = a[1] + a[2]*x + a[3]*np.power(x,2) + a[4]*np.power(x,3)
        variables = (X)
    # C = 1D quartic map
    if char[0] == "C":
        x = oldvariables[0]
        X = a[1] + a[2]*x + a[3]*np.power(x,2) + a[4]*np.power(x,3) + a[5]*np.power(x,4)
        variables = (X)
    # D = 1D quintic map
    if char[0] == "D":
        x = oldvariables[0]
        X = a[1] + a[2]*x + a[3]*np.power(x,2) + a[4]*np.power(x,3) + a[5]*np.power(x,4) + a[6]*np.power(x,5)
        variables = (X)
    # E = 2D quadratic map
    if char[0] == "E":
        x = oldvariables[0]
        y = oldvariables[1]
        X = a[1] + a[2]*x + a[3]*np.power(x,2) +  a[4]*x*y +  a[5]*y +  a[6]*np.power(y,2)
        Y = a[7] + a[8]*x + a[9]*np.power(x,2) + a[10]*x*y + a[11]*y + a[12]*np.power(y,2)
        variables = (X,Y)
    # F = 2D cubic map
    if char[0] == "F":
        x = oldvariables[0]
        y = oldvariables[1]
        X =  a[1] +  a[2]*x +  a[3]*np.power(x,2) +  a[4]*np.power(x,3) +  a[5]*np.power(x,2)*y +  a[6]*x*y +  a[7]*x*np.power(y,2) +  a[8]*y +  a[9]*np.power(y,2) + a[10]*np.power(y,3) 
        Y = a[11] + a[12]*x + a[13]*np.power(x,2) + a[14]*np.power(x,3) + a[15]*np.power(x,2)*y + a[16]*x*y + a[17]*x*np.power(y,2) + a[18]*y + a[19]*np.power(y,2) + a[20]*np.power(y,3) 
        variables = (X,Y)
    # G = 2D quartic map
    if char[0] == "G":
        x = oldvariables[0]
        y = oldvariables[1]
        X =  a[1] +  a[2]*x +  a[3]*np.power(x,2) +  a[4]*np.power(x,3) +  a[5]*np.power(x,4) +  a[6]*np.power(x,3)*y +  a[7]*np.power(x,2)*y +  a[8]*np.power(x,2)*np.power(y,2) +  a[9]*x*y + a[10]*x*np.power(y,2) + a[11]*x*np.power(y,3) + a[12]*y + a[13]*np.power(y,2) + a[14]*np.power(y,3) + a[15]*np.power(y,4)
        Y = a[16] + a[17]*x + a[18]*np.power(x,2) + a[19]*np.power(x,3) + a[20]*np.power(x,4) + a[21]*np.power(x,3)*y + a[22]*np.power(x,2)*y + a[23]*np.power(x,2)*np.power(y,2) + a[24]*x*y + a[25]*x*np.power(y,2) + a[26]*x*np.power(y,3) + a[27]*y + a[28]*np.power(y,2) + a[29]*np.power(y,3) + a[30]*np.power(y,4)
        variables = (X,Y)
    # H = 2D quintic map
    if char[0] == "H":
        x = oldvariables[0]
        y = oldvariables[1]
        X =  a[1] +  a[2]*x +  a[3]*np.power(x,2) +  a[4]*np.power(x,3) +  a[5]*np.power(x,4) +  a[6]*np.power(x,5) +  a[7]*np.power(x,4)*y +  a[8]*np.power(x,3)*y +  a[9]*np.power(x,3)*np.power(y,2) + a[10]*np.power(x,2)*y + a[11]*np.power(x,2)*np.power(y,2) + a[12]*np.power(x,2)*np.power(y,3) + a[13]*x*y + a[14]*x*np.power(y,2) + a[15]*x*np.power(y,3) + a[16]*x*np.power(y,4) + a[17]*y + a[18]*np.power(y,2) + a[19]*np.power(y,3) + a[20]*np.power(y,4) + a[21]*np.power(y,5)
        Y = a[22] + a[23]*x + a[24]*np.power(x,2) + a[25]*np.power(x,3) + a[26]*np.power(x,4) + a[27]*np.power(x,5) + a[28]*np.power(x,4)*y + a[29]*np.power(x,3)*y + a[30]*np.power(x,3)*np.power(y,2) + a[31]*np.power(x,2)*y + a[32]*np.power(x,2)*np.power(y,2) + a[33]*np.power(x,2)*np.power(y,3) + a[34]*x*y + a[35]*x*np.power(y,2) + a[36]*x*np.power(y,3) + a[37]*x*np.power(y,4) + a[38]*y + a[39]*np.power(y,2) + a[40]*np.power(y,3) + a[41]*np.power(y,4) + a[42]*np.power(y,5)
        variables = (X,Y)
    # I = 3D quadratic map
    if char[0] == "I":
        x = oldvariables[0]
        y = oldvariables[1]
        z = oldvariables[2]
        X =  a[1] +  a[2]*x +  a[3]*np.power(x,2) +  a[4]*x*y +  a[5]*x*z +  a[6]*y +  a[7]*np.power(y,2) +  a[8]*y*z +  a[9]*z + a[10]*np.power(z,2)
        Y = a[11] + a[12]*x + a[13]*np.power(x,2) + a[14]*x*y + a[15]*x*z + a[16]*y + a[17]*np.power(y,2) + a[18]*y*z + a[19]*z + a[20]*np.power(z,2)
        Z = a[21] + a[22]*x + a[23]*np.power(x,2) + a[24]*x*y + a[25]*x*z + a[26]*y + a[27]*np.power(y,2) + a[28]*y*z + a[29]*z + a[30]*np.power(z,2)
        variables = (X,Y,Z)
    # J = 3D cubic map
    if char[0] == "J":
        x = oldvariables[0]
        y = oldvariables[1]
        z = oldvariables[2]
        X =  a[1] +  a[2]*x +  a[3]*np.power(x,2) +  a[4]*np.power(x,3) +  a[5]*np.power(x,2)*y +  a[6]*np.power(x,2)*z +  a[7]*x*y +  a[8]*x*np.power(y,2) +  a[9]*x*y*z + a[10]*x*z + a[11]*x*np.power(z,2) + a[12]*y + a[13]*np.power(y,2) + a[14]*np.power(y,3) + a[15]*np.power(y,2)*z + a[16]*y*z + a[17]*y*np.power(z,2) + a[18]*z + a[19]*np.power(z,2) + a[20]*np.power(z,3)
        Y = a[21] + a[22]*x + a[23]*np.power(x,2) + a[24]*np.power(x,3) + a[25]*np.power(x,2)*y + a[26]*np.power(x,2)*z + a[27]*x*y + a[28]*x*np.power(y,2) + a[29]*x*y*z + a[30]*x*z + a[31]*x*np.power(z,2) + a[32]*y + a[33]*np.power(y,2) + a[34]*np.power(y,3) + a[35]*np.power(y,2)*z + a[36]*y*z + a[37]*y*np.power(z,2) + a[38]*z + a[39]*np.power(z,2) + a[40]*np.power(z,3)
        Z = a[41] + a[42]*x + a[43]*np.power(x,2) + a[44]*np.power(x,3) + a[45]*np.power(x,2)*y + a[46]*np.power(x,2)*z + a[47]*x*y + a[48]*x*np.power(y,2) + a[49]*x*y*z + a[50]*x*z + a[51]*x*np.power(z,2) + a[52]*y + a[53]*np.power(y,2) + a[54]*np.power(y,3) + a[55]*np.power(y,2)*z + a[56]*y*z + a[57]*y*np.power(z,2) + a[58]*z + a[59]*np.power(z,2) + a[60]*np.power(z,3)
        variables = (X,Y,Z)
    # K = 3D quartic map
    if char[0] == "K":
        x = oldvariables[0]
        y = oldvariables[1]
        z = oldvariables[2]
        X =  a[1] +  a[2]*x +  a[3]*np.power(x,2) +  a[4]*np.power(x,3) +  a[5]*np.power(x,4) +  a[6]*np.power(x,3)*y +  a[7]*np.power(x,3)*z +  a[8]*np.power(x,2)*y +  a[9]*np.power(x,2)*np.power(y,2) + a[10]*np.power(x,2)*y*z + a[11]*np.power(x,2)*z + a[12]*np.power(x,2)*np.power(z,2) + a[13]*x*y + a[14]*x*np.power(y,2) + a[15]*x*np.power(y,3) + a[16]*x*np.power(y,2)*z + a[17]*x*y*z + a[18]*x*y*np.power(z,2) + a[19]*x*z + a[20]*x*np.power(z,2) + a[21]*x*np.power(z,3) + a[22]*y + a[23]*np.power(y,2) + a[24]*np.power(y,3) + a[25]*np.power(y,4) + a[26]*np.power(y,3)*z + a[27]*np.power(y,2)*z + a[28]*np.power(y,2)*np.power(z,2) + a[29]*y*z +  a[30]*y*np.power(z,2) +  a[31]*y*np.power(z,3) +  a[32]*z +  a[33]*np.power(z,2) +  a[34]*np.power(z,3) + a[35]*np.power(z,4)
        Y = a[36] + a[37]*x + a[38]*np.power(x,2) + a[39]*np.power(x,3) + a[40]*np.power(x,4) + a[41]*np.power(x,3)*y + a[42]*np.power(x,3)*z + a[43]*np.power(x,2)*y + a[44]*np.power(x,2)*np.power(y,2) + a[45]*np.power(x,2)*y*z + a[46]*np.power(x,2)*z + a[47]*np.power(x,2)*np.power(z,2) + a[48]*x*y + a[49]*x*np.power(y,2) + a[50]*x*np.power(y,3) + a[51]*x*np.power(y,2)*z + a[52]*x*y*z + a[53]*x*y*np.power(z,2) + a[54]*x*z + a[55]*x*np.power(z,2) + a[56]*x*np.power(z,3) + a[57]*y + a[58]*np.power(y,2) + a[59]*np.power(y,3) + a[60]*np.power(y,4) + a[61]*np.power(y,3)*z + a[62]*np.power(y,2)*z + a[63]*np.power(y,2)*np.power(z,2) + a[64]*y*z +  a[65]*y*np.power(z,2) +  a[66]*y*np.power(z,3) +  a[67]*z +  a[68]*np.power(z,2) +  a[69]*np.power(z,3) + a[70]*np.power(z,4)
        Z = a[71] + a[72]*x + a[73]*np.power(x,2) + a[74]*np.power(x,3) + a[75]*np.power(x,4) + a[76]*np.power(x,3)*y + a[77]*np.power(x,3)*z + a[78]*np.power(x,2)*y + a[79]*np.power(x,2)*np.power(y,2) + a[80]*np.power(x,2)*y*z + a[81]*np.power(x,2)*z + a[82]*np.power(x,2)*np.power(z,2) + a[83]*x*y + a[84]*x*np.power(y,2) + a[85]*x*np.power(y,3) + a[86]*x*np.power(y,2)*z + a[87]*x*y*z + a[88]*x*y*np.power(z,2) + a[89]*x*z + a[90]*x*np.power(z,2) + a[91]*x*np.power(z,3) + a[92]*y + a[93]*np.power(y,2) + a[94]*np.power(y,3) + a[95]*np.power(y,4) + a[96]*np.power(y,3)*z + a[97]*np.power(y,2)*z + a[98]*np.power(y,2)*np.power(z,2) + a[99]*y*z + a[100]*y*np.power(z,2) + a[101]*y*np.power(z,3) + a[102]*z + a[103]*np.power(z,2) + a[104]*np.power(z,3) + a[105]*np.power(z,4)
        variables = (X,Y,Z)
    # L = 3D quintic map
    if char[0] == "L":
        x = oldvariables[0]
        y = oldvariables[1]
        z = oldvariables[2]
        X =   a[1] +   a[2]*x +   a[3]*np.power(x,2) +   a[4]*np.power(x,3) +   a[5]*np.power(x,4) +   a[6]*np.power(x,5) +   a[7]*np.power(x,4)*y +   a[8]*np.power(x,4)*z +   a[9]*np.power(x,3)*y +  a[10]*np.power(x,3)*np.power(y,2) + a[11]*np.power(x,3)*y*z +  a[12]*np.power(x,3)*z +  a[13]*np.power(x,3)*np.power(z,2) +  a[14]*np.power(x,2)*y +  a[15]*np.power(x,2)*np.power(y,2) +  a[16]*np.power(x,2)*np.power(y,3) +  a[17]*np.power(x,2)*np.power(y,2)*z +  a[18]*np.power(x,2)*y*z +  a[19]*np.power(x,2)*y*np.power(z,2) +  a[20]*np.power(x,2)*z +  a[21]*np.power(x,2)*np.power(z,2) +  a[22]*np.power(x,2)*np.power(z,3) +  a[23]*x*y +  a[24]*x*np.power(y,2) +  a[25]*x*np.power(y,3) +  a[26]*x*np.power(y,4) +  a[27]*x*np.power(y,3)*z +  a[28]*x*np.power(y,2)*z +  a[29]*x*np.power(y,2)*np.power(z,2) +  a[30]*x*y*z +  a[31]*x*y*np.power(z,2) +  a[32]*x*y*np.power(z,3) +  a[33]*x*z +  a[34]*x*np.power(z,2) +  a[35]*x*np.power(z,3) +  a[36]*x*np.power(z,4) +  a[37]*y +  a[38]*np.power(y,2) +  a[39]*np.power(y,3) +  a[40]*np.power(y,4) +  a[41]*np.power(y,5) +  a[42]*np.power(y,4)*z +  a[43]*np.power(y,3)*z +  a[44]*np.power(y,3)*np.power(z,2) +  a[45]*np.power(y,2)*z +  a[46]*np.power(y,2)*np.power(z,2) +  a[47]*np.power(y,2)*np.power(z,3) +  a[48]*y*z +  a[49]*y*np.power(z,2) +  a[50]*y*np.power(z,3) +  a[51]*y*np.power(z,4) +  a[52]*z +  a[53]*np.power(z,2) +  a[54]*np.power(z,3) +  a[55]*np.power(z,4) +  a[56]*np.power(z,5)
        Y =  a[57] +  a[58]*x +  a[59]*np.power(x,2) +  a[60]*np.power(x,3) +  a[61]*np.power(x,4) +  a[62]*np.power(x,5) +  a[63]*np.power(x,4)*y +  a[64]*np.power(x,4)*z +  a[65]*np.power(x,3)*y +  a[66]*np.power(x,3)*np.power(y,2) + a[67]*np.power(x,3)*y*z +  a[68]*np.power(x,3)*z +  a[69]*np.power(x,3)*np.power(z,2) +  a[70]*np.power(x,2)*y +  a[71]*np.power(x,2)*np.power(y,2) +  a[72]*np.power(x,2)*np.power(y,3) +  a[73]*np.power(x,2)*np.power(y,2)*z +  a[74]*np.power(x,2)*y*z +  a[75]*np.power(x,2)*y*np.power(z,2) +  a[76]*np.power(x,2)*z +  a[77]*np.power(x,2)*np.power(z,2) +  a[78]*np.power(x,2)*np.power(z,3) +  a[79]*x*y +  a[80]*x*np.power(y,2) +  a[81]*x*np.power(y,3) +  a[82]*x*np.power(y,4) +  a[83]*x*np.power(y,3)*z +  a[84]*x*np.power(y,2)*z +  a[85]*x*np.power(y,2)*np.power(z,2) +  a[86]*x*y*z +  a[87]*x*y*np.power(z,2) +  a[88]*x*y*np.power(z,3) +  a[89]*x*z +  a[90]*x*np.power(z,2) +  a[91]*x*np.power(z,3) +  a[92]*x*np.power(z,4) +  a[93]*y +  a[94]*np.power(y,2) +  a[95]*np.power(y,3) +  a[96]*np.power(y,4) +  a[97]*np.power(y,5) +  a[98]*np.power(y,4)*z +  a[99]*np.power(y,3)*z + a[100]*np.power(y,3)*np.power(z,2) + a[101]*np.power(y,2)*z + a[102]*np.power(y,2)*np.power(z,2) + a[103]*np.power(y,2)*np.power(z,3) + a[104]*y*z + a[105]*y*np.power(z,2) + a[106]*y*np.power(z,3) + a[107]*y*np.power(z,4) + a[108]*z + a[109]*np.power(z,2) + a[110]*np.power(z,3) + a[111]*np.power(z,4) + a[112]*np.power(z,5)
        Z = a[113] + a[114]*x + a[115]*np.power(x,2) + a[116]*np.power(x,3) + a[117]*np.power(x,4) + a[118]*np.power(x,5) + a[119]*np.power(x,4)*y + a[120]*np.power(x,4)*z + a[121]*np.power(x,3)*y + a[122]*np.power(x,3)*np.power(y,2)+ a[123]*np.power(x,3)*y*z + a[124]*np.power(x,3)*z + a[125]*np.power(x,3)*np.power(z,2) + a[126]*np.power(x,2)*y + a[127]*np.power(x,2)*np.power(y,2) + a[128]*np.power(x,2)*np.power(y,3) + a[129]*np.power(x,2)*np.power(y,2)*z + a[130]*np.power(x,2)*y*z + a[131]*np.power(x,2)*y*np.power(z,2) + a[132]*np.power(x,2)*z + a[133]*np.power(x,2)*np.power(z,2) + a[134]*np.power(x,2)*np.power(z,3) + a[135]*x*y + a[136]*x*np.power(y,2) + a[137]*x*np.power(y,3) + a[138]*x*np.power(y,4) + a[139]*x*np.power(y,3)*z + a[140]*x*np.power(y,2)*z + a[141]*x*np.power(y,2)*np.power(z,2) + a[142]*x*y*z + a[143]*x*y*np.power(z,2) + a[144]*x*y*np.power(z,3) + a[145]*x*z + a[146]*x*np.power(z,2) + a[147]*x*np.power(z,3) + a[148]*x*np.power(z,4) + a[149]*y + a[150]*np.power(y,2) + a[151]*np.power(y,3) + a[152]*np.power(y,4) + a[153]*np.power(y,5) + a[154]*np.power(y,4)*z + a[155]*np.power(y,3)*z + a[156]*np.power(y,3)*np.power(z,2) + a[157]*np.power(y,2)*z + a[158]*np.power(y,2)*np.power(z,2) + a[159]*np.power(y,2)*np.power(z,3) + a[160]*y*z + a[161]*y*np.power(z,2) + a[162]*y*np.power(z,3) + a[163]*y*np.power(z,4) + a[164]*z + a[165]*np.power(z,2) + a[166]*np.power(z,3) + a[167]*np.power(z,4) + a[168]*np.power(z,5)
        variables = (X,Y,Z)
    # M = 4D quadratic map
    if char[0] == "M":
        x = oldvariables[0]
        y = oldvariables[1]
        z = oldvariables[2]
        w = oldvariables[3]
        X =  a[1] +  a[2]*x +  a[3]*np.power(x,2) +  a[4]*x*y +  a[5]*x*z +  a[6]*x*w +  a[7]*y +  a[8]*np.power(y,2) +  a[9]*y*z + a[10]*y*w + a[11]*z + a[12]*np.power(z,2) + a[13]*z*w + a[14]*w + a[15]*np.power(w,2)
        Y = a[16] + a[17]*x + a[18]*np.power(x,2) + a[19]*x*y + a[20]*x*z + a[21]*x*w + a[22]*y + a[23]*np.power(y,2) + a[24]*y*z + a[25]*y*w + a[26]*z + a[27]*np.power(z,2) + a[28]*z*w + a[29]*w + a[30]*np.power(w,2)
        Z = a[31] + a[32]*x + a[33]*np.power(x,2) + a[34]*x*y + a[35]*x*z + a[36]*x*w + a[37]*y + a[38]*np.power(y,2) + a[39]*y*z + a[40]*y*w + a[41]*z + a[42]*np.power(z,2) + a[43]*z*w + a[44]*w + a[45]*np.power(w,2)
        W = a[46] + a[47]*x + a[48]*np.power(x,2) + a[49]*x*y + a[50]*x*z + a[51]*x*w + a[52]*y + a[53]*np.power(y,2) + a[54]*y*z + a[55]*y*w + a[56]*z + a[57]*np.power(z,2) + a[58]*z*w + a[59]*w + a[60]*np.power(w,2)
        variables = (X,Y,Z,W)
    # N = 4D  map
    if char[0] == "N":
        x = oldvariables[0]
        y = oldvariables[1]
        z = oldvariables[2]
        w = oldvariables[3]
        X =   a[1] +   a[2]*x +   a[3]*np.power(x,2) +   a[4]*np.power(x,3) +   a[5]*np.power(x,2)*y +   a[6]*np.power(x,2)*z +   a[7]*np.power(x,2)*w +   a[8]*x*y +   a[9]*x*np.power(y,2) +  a[10]*x*y*z +  a[11]*x*y*w +  a[12]*x*z +  a[13]*x*np.power(z,2) +  a[14]*x*z*w +  a[15]*x*w +  a[16]*x*np.power(w,2) +  a[17]*y +  a[18]*np.power(y,2) +  a[19]*np.power(y,3) +  a[20]*np.power(y,2)*z +  a[21]*np.power(y,2)*w +  a[22]*y*z +  a[23]*y*np.power(z,2) +  a[24]*y*z*w +  a[25]*y*w +  a[26]*y*np.power(w,2) +  a[27]*z +  a[28]*np.power(z,2) +  a[29]*np.power(z,3) +  a[30]*np.power(z,2)*w +  a[31]*z*w +  a[32]*z*np.power(w,2) +  a[33]*w +  a[34]*np.power(w,2) +  a[35]*np.power(w,3)
        Y =  a[36] +  a[37]*x +  a[38]*np.power(x,2) +  a[39]*np.power(x,3) +  a[40]*np.power(x,2)*y +  a[41]*np.power(x,2)*z +  a[42]*np.power(x,2)*w +  a[43]*x*y +  a[44]*x*np.power(y,2) +  a[45]*x*y*z +  a[46]*x*y*w +  a[47]*x*z +  a[48]*x*np.power(z,2) +  a[49]*x*z*w +  a[50]*x*w +  a[51]*x*np.power(w,2) +  a[52]*y +  a[53]*np.power(y,2) +  a[54]*np.power(y,3) +  a[55]*np.power(y,2)*z +  a[56]*np.power(y,2)*w +  a[57]*y*z +  a[58]*y*np.power(z,2) +  a[59]*y*z*w +  a[60]*y*w +  a[61]*y*np.power(w,2) +  a[62]*z +  a[63]*np.power(z,2) +  a[64]*np.power(z,3) +  a[65]*np.power(z,2)*w +  a[66]*z*w +  a[67]*z*np.power(w,2) +  a[68]*w +  a[69]*np.power(w,2) +  a[70]*np.power(w,3)
        Z =  a[71] +  a[72]*x +  a[73]*np.power(x,2) +  a[74]*np.power(x,3) +  a[75]*np.power(x,2)*y +  a[76]*np.power(x,2)*z +  a[77]*np.power(x,2)*w +  a[78]*x*y +  a[79]*x*np.power(y,2) +  a[80]*x*y*z +  a[81]*x*y*w +  a[82]*x*z +  a[83]*x*np.power(z,2) +  a[84]*x*z*w +  a[85]*x*w +  a[86]*x*np.power(w,2) +  a[87]*y +  a[88]*np.power(y,2) +  a[89]*np.power(y,3) +  a[90]*np.power(y,2)*z +  a[91]*np.power(y,2)*w +  a[92]*y*z +  a[93]*y*np.power(z,2) +  a[94]*y*z*w +  a[95]*y*w +  a[96]*y*np.power(w,2) +  a[97]*z +  a[98]*np.power(z,2) +  a[99]*np.power(z,3) + a[100]*np.power(z,2)*w + a[101]*z*w + a[102]*z*np.power(w,2) + a[103]*w + a[104]*np.power(w,2) + a[105]*np.power(w,3)
        W = a[106] + a[107]*x + a[108]*np.power(x,2) + a[109]*np.power(x,3) + a[110]*np.power(x,2)*y + a[111]*np.power(x,2)*z + a[112]*np.power(x,2)*w + a[113]*x*y + a[114]*x*np.power(y,2) + a[115]*x*y*z + a[116]*x*y*w + a[117]*x*z + a[118]*x*np.power(z,2) + a[119]*x*z*w + a[120]*x*w + a[121]*x*np.power(w,2) + a[122]*y + a[123]*np.power(y,2) + a[124]*np.power(y,3) + a[125]*np.power(y,2)*z + a[126]*np.power(y,2)*w + a[127]*y*z + a[128]*y*np.power(z,2) + a[129]*y*z*w + a[130]*y*w + a[131]*y*np.power(w,2) + a[132]*z + a[133]*np.power(z,2) + a[134]*np.power(z,3) + a[135]*np.power(z,2)*w + a[136]*z*w + a[137]*z*np.power(w,2) + a[138]*w + a[139]*np.power(w,2) + a[140]*np.power(w,3)
        variables = (X,Y,Z,W)
    # O 4D map
    if char[0] == "O":
        x = oldvariables[0]
        y = oldvariables[1]
        z = oldvariables[2]
        w = oldvariables[3]
        X =   a[1] +   a[2]*x +   a[3]*np.power(x,2) +   a[4]*np.power(x,3) +   a[5]*np.power(x,4) +   a[6]*np.power(x,3)*y +   a[7]*np.power(x,3)*z +   a[8]*np.power(x,3)*w +   a[9]*np.power(x,2)*y +  a[10]*np.power(x,2)*np.power(y,2) +  a[11]*np.power(x,2)*y*z +  a[12]*np.power(x,2)*y*w +  a[13]*np.power(x,2)*z +  a[14]*np.power(x,2)*np.power(z,2) +  a[15]*np.power(x,2)*z*w +  a[16]*np.power(x,2)*w +  a[17]*np.power(x,2)*np.power(w,2) +  a[18]*x*y +  a[19]*x*np.power(y,2) +  a[20]*x*np.power(y,3) +  a[21]*x*np.power(y,2)*z +  a[22]*x*np.power(y,2)*w +  a[23]*x*y*z +  a[24]*x*y*np.power(z,2) +  a[25]*x*y*z*w +  a[26]*x*y*w +  a[27]*x*y*np.power(w,2) +  a[28]*x*z +  a[29]*x*np.power(z,2) +  a[30]*x*np.power(z,3) +  a[31]*x*np.power(z,2)*w +  a[32]*x*z*w +  a[33]*x*z*np.power(w,2) +  a[34]*x*w +  a[35]*x*np.power(w,2) +  a[36]*x*np.power(w,3) +  a[37]*y +  a[38]*np.power(y,2) +  a[39]*np.power(y,3) +  a[40]*np.power(y,4) +  a[41]*np.power(y,3)*z +  a[42]*np.power(y,3)*w +  a[43]*np.power(y,2)*z +  a[44]*np.power(y,2)*np.power(z,2) +  a[45]*np.power(y,2)*z*w +  a[46]*np.power(y,2)*w +  a[47]*np.power(y,2)*np.power(w,2) +  a[48]*y*z +  a[49]*y*np.power(z,2) +  a[50]*y*np.power(z,3) +  a[51]*y*np.power(z,2)*w +  a[52]*y*z*w +  a[53]*y*z*np.power(w,2) +  a[54]*y*w +  a[55]*y*np.power(w,2) +  a[56]*y*np.power(w,3) +  a[57]*z +  a[58]*np.power(z,2) +  a[59]*np.power(z,3) +  a[60]*np.power(z,4) +  a[61]*np.power(z,3)*w +  a[62]*np.power(z,2)*w +  a[63]*np.power(z,2)*np.power(w,2) +  a[64]*z*w +  a[65]*z*np.power(w,2) +  a[66]*z*np.power(w,3) +  a[67]*w +  a[68]*np.power(w,2) +  a[69]*np.power(w,3) +  a[70]*np.power(w,4)
        Y =  a[71] +  a[72]*x +  a[73]*np.power(x,2) +  a[74]*np.power(x,3) +  a[75]*np.power(x,4) +  a[76]*np.power(x,3)*y +  a[77]*np.power(x,3)*z +  a[78]*np.power(x,3)*w +  a[79]*np.power(x,2)*y +  a[80]*np.power(x,2)*np.power(y,2) +  a[81]*np.power(x,2)*y*z +  a[82]*np.power(x,2)*y*w +  a[83]*np.power(x,2)*z +  a[84]*np.power(x,2)*np.power(z,2) +  a[85]*np.power(x,2)*z*w +  a[86]*np.power(x,2)*w +  a[87]*np.power(x,2)*np.power(w,2) +  a[88]*x*y +  a[89]*x*np.power(y,2) +  a[90]*x*np.power(y,3) +  a[91]*x*np.power(y,2)*z +  a[92]*x*np.power(y,2)*w +  a[93]*x*y*z +  a[94]*x*y*np.power(z,2) +  a[95]*x*y*z*w +  a[96]*x*y*w +  a[97]*x*y*np.power(w,2) +  a[98]*x*z +  a[99]*x*np.power(z,2) + a[100]*x*np.power(z,3) + a[101]*x*np.power(z,2)*w + a[102]*x*z*w + a[103]*x*z*np.power(w,2) + a[104]*x*w + a[105]*x*np.power(w,2) + a[106]*x*np.power(w,3) + a[107]*y + a[108]*np.power(y,2) + a[109]*np.power(y,3) + a[110]*np.power(y,4) + a[111]*np.power(y,3)*z + a[112]*np.power(y,3)*w + a[113]*np.power(y,2)*z + a[114]*np.power(y,2)*np.power(z,2) + a[115]*np.power(y,2)*z*w + a[116]*np.power(y,2)*w + a[117]*np.power(y,2)*np.power(w,2) + a[118]*y*z + a[119]*y*np.power(z,2) + a[120]*y*np.power(z,3) + a[121]*y*np.power(z,2)*w + a[122]*y*z*w + a[123]*y*z*np.power(w,2) + a[124]*y*w + a[125]*y*np.power(w,2) + a[126]*y*np.power(w,3) + a[127]*z + a[128]*np.power(z,2) + a[129]*np.power(z,3) + a[130]*np.power(z,4) + a[131]*np.power(z,3)*w + a[132]*np.power(z,2)*w + a[133]*np.power(z,2)*np.power(w,2) + a[134]*z*w + a[135]*z*np.power(w,2) + a[136]*z*np.power(w,3) + a[137]*w + a[138]*np.power(w,2) + a[139]*np.power(w,3) + a[140]*np.power(w,4)
        Z = a[141] + a[142]*x + a[143]*np.power(x,2) + a[144]*np.power(x,3) + a[145]*np.power(x,4) + a[146]*np.power(x,3)*y + a[147]*np.power(x,3)*z + a[148]*np.power(x,3)*w + a[149]*np.power(x,2)*y + a[150]*np.power(x,2)*np.power(y,2) + a[151]*np.power(x,2)*y*z + a[152]*np.power(x,2)*y*w + a[153]*np.power(x,2)*z + a[154]*np.power(x,2)*np.power(z,2) + a[155]*np.power(x,2)*z*w + a[156]*np.power(x,2)*w + a[157]*np.power(x,2)*np.power(w,2) + a[158]*x*y + a[159]*x*np.power(y,2) + a[160]*x*np.power(y,3) + a[161]*x*np.power(y,2)*z + a[162]*x*np.power(y,2)*w + a[163]*x*y*z + a[164]*x*y*np.power(z,2) + a[165]*x*y*z*w + a[166]*x*y*w + a[167]*x*y*np.power(w,2) + a[168]*x*z + a[169]*x*np.power(z,2) + a[170]*x*np.power(z,3) + a[171]*x*np.power(z,2)*w + a[172]*x*z*w + a[173]*x*z*np.power(w,2) + a[174]*x*w + a[175]*x*np.power(w,2) + a[176]*x*np.power(w,3) + a[177]*y + a[178]*np.power(y,2) + a[179]*np.power(y,3) + a[180]*np.power(y,4) + a[181]*np.power(y,3)*z + a[182]*np.power(y,3)*w + a[183]*np.power(y,2)*z + a[184]*np.power(y,2)*np.power(z,2) + a[185]*np.power(y,2)*z*w + a[186]*np.power(y,2)*w + a[187]*np.power(y,2)*np.power(w,2) + a[188]*y*z + a[189]*y*np.power(z,2) + a[190]*y*np.power(z,3) + a[191]*y*np.power(z,2)*w + a[192]*y*z*w + a[193]*y*z*np.power(w,2) + a[194]*y*w + a[195]*y*np.power(w,2) + a[196]*y*np.power(w,3) + a[197]*z + a[198]*np.power(z,2) + a[199]*np.power(z,3) + a[200]*np.power(z,4) + a[201]*np.power(z,3)*w + a[202]*np.power(z,2)*w + a[203]*np.power(z,2)*np.power(w,2) + a[204]*z*w + a[205]*z*np.power(w,2) + a[206]*z*np.power(w,3) + a[207]*w + a[208]*np.power(w,2) + a[209]*np.power(w,3) + a[210]*np.power(w,4)
        W = a[211] + a[212]*x + a[213]*np.power(x,2) + a[214]*np.power(x,3) + a[215]*np.power(x,4) + a[216]*np.power(x,3)*y + a[217]*np.power(x,3)*z + a[218]*np.power(x,3)*w + a[219]*np.power(x,2)*y + a[220]*np.power(x,2)*np.power(y,2) + a[221]*np.power(x,2)*y*z + a[222]*np.power(x,2)*y*w + a[223]*np.power(x,2)*z + a[224]*np.power(x,2)*np.power(z,2) + a[225]*np.power(x,2)*z*w + a[226]*np.power(x,2)*w + a[227]*np.power(x,2)*np.power(w,2) + a[228]*x*y + a[229]*x*np.power(y,2) + a[230]*x*np.power(y,3) + a[231]*x*np.power(y,2)*z + a[232]*x*np.power(y,2)*w + a[233]*x*y*z + a[234]*x*y*np.power(z,2) + a[235]*x*y*z*w + a[236]*x*y*w + a[237]*x*y*np.power(w,2) + a[238]*x*z + a[239]*x*np.power(z,2) + a[240]*x*np.power(z,3) + a[241]*x*np.power(z,2)*w + a[242]*x*z*w + a[243]*x*z*np.power(w,2) + a[244]*x*w + a[245]*x*np.power(w,2) + a[246]*x*np.power(w,3) + a[247]*y + a[248]*np.power(y,2) + a[249]*np.power(y,3) + a[250]*np.power(y,4) + a[251]*np.power(y,3)*z + a[252]*np.power(y,3)*w + a[253]*np.power(y,2)*z + a[254]*np.power(y,2)*np.power(z,2) + a[255]*np.power(y,2)*z*w + a[256]*np.power(y,2)*w + a[257]*np.power(y,2)*np.power(w,2) + a[258]*y*z + a[259]*y*np.power(z,2) + a[260]*y*np.power(z,3) + a[261]*y*np.power(z,2)*w + a[262]*y*z*w + a[263]*y*z*np.power(w,2) + a[264]*y*w + a[265]*y*np.power(w,2) + a[266]*y*np.power(w,3) + a[267]*z + a[268]*np.power(z,2) + a[269]*np.power(z,3) + a[270]*np.power(z,4) + a[271]*np.power(z,3)*w + a[272]*np.power(z,2)*w + a[273]*np.power(z,2)*np.power(w,2) + a[274]*z*w + a[275]*z*np.power(w,2) + a[276]*z*np.power(w,3) + a[277]*w + a[278]*np.power(w,2) + a[279]*np.power(w,3) + a[280]*np.power(w,4) 
        variables = (X,Y,Z,W)
    # P 4D map
    if char[0] == "P":
        x = oldvariables[0]
        y = oldvariables[1]
        z = oldvariables[2]
        w = oldvariables[3]
        X =   a[1] +   a[2]*x +   a[3]*np.power(x,2) +   a[4]*np.power(x,3) +   a[5]*np.power(x,4) +   a[6]*np.power(x,5) +   a[7]*np.power(x,4)*y +   a[8]*np.power(x,4)*z +   a[9]*np.power(x,4)*w +  a[10]*np.power(x,3)*y +  a[11]*np.power(x,3)*np.power(y,2) +  a[12]*np.power(x,3)*y*z +  a[13]*np.power(x,3)*y*w +  a[14]*np.power(x,3)*z +  a[15]*np.power(x,3)*np.power(z,2) +  a[16]*np.power(x,3)*z*w +  a[17]*np.power(x,3)*w +  a[18]*np.power(x,3)*np.power(w,2) +  a[19]*np.power(x,2)*y +  a[20]*np.power(x,2)*np.power(y,2) +  a[21]*np.power(x,2)*np.power(y,3) +  a[22]*np.power(x,2)*np.power(y,2)*z +  a[23]*np.power(x,2)*np.power(y,2)*w +  a[24]*np.power(x,2)*y*z +  a[25]*np.power(x,2)*y*np.power(z,2) +  a[26]*np.power(x,2)*y*z*w +  a[27]*np.power(x,2)*y*w +  a[28]*np.power(x,2)*y*np.power(w,2) +  a[29]*np.power(x,2)*z +  a[30]*np.power(x,2)*np.power(z,2) +  a[31]*np.power(x,2)*np.power(z,3) +  a[32]*np.power(x,2)*np.power(z,2)*w +  a[33]*np.power(x,2)*z*w +  a[34]*np.power(x,2)*z*np.power(w,2) +  a[35]*np.power(x,2)*w +  a[36]*np.power(x,2)*np.power(w,2) +  a[37]*np.power(x,2)*np.power(w,3) +  a[38]*x*y +  a[39]*x*np.power(y,2) +  a[40]*x*np.power(y,3) +  a[41]*x*np.power(y,4) +  a[42]*x*np.power(y,3)*z +  a[43]*x*np.power(y,3)*w +  a[44]*x*np.power(y,2)*z +  a[45]*x*np.power(y,2)*np.power(z,2) +  a[46]*x*np.power(y,2)*z*w +  a[47]*x*np.power(y,2)*w +  a[48]*x*np.power(y,2)*np.power(w,2) +  a[49]*x*y*z +  a[50]*x*y*np.power(z,2) +  a[51]*x*y*np.power(z,3) +  a[52]*x*y*np.power(z,2)*w +  a[53]*x*y*z*w +  a[54]*x*y*z*np.power(w,2) +  a[55]*x*y*w +  a[56]*x*y*np.power(w,2) +  a[57]*x*y*np.power(w,3) +  a[58]*x*z +  a[59]*x*np.power(z,2) +  a[60]*x*np.power(z,3) +  a[61]*x*np.power(z,4) +  a[62]*x*np.power(z,3)*w +  a[63]*x*np.power(z,2)*w +  a[64]*x*np.power(z,2)*np.power(w,2) +  a[65]*x*z*w +  a[66]*x*z*np.power(w,2) +  a[67]*x*z*np.power(w,3) +  a[68]*x*w +  a[69]*x*np.power(w,2) +  a[70]*x*np.power(w,3) +  a[71]*x*np.power(w,4) +  a[72]*y +  a[73]*np.power(y,2) +  a[74]*np.power(y,3) +  a[75]*np.power(y,4) +  a[76]*np.power(y,5) +  a[77]*np.power(y,4)*z +  a[78]*np.power(y,4)*w +  a[79]*np.power(y,3)*z +  a[80]*np.power(y,3)*np.power(z,2) +  a[81]*np.power(y,3)*z*w +  a[82]*np.power(y,3)*w +  a[83]*np.power(y,3)*np.power(w,2) +  a[84]*np.power(y,2)*z +  a[85]*np.power(y,2)*np.power(z,2) +  a[86]*np.power(y,2)*np.power(z,3) +  a[87]*np.power(y,2)*np.power(z,2)*w +  a[88]*np.power(y,2)*z*w +  a[89]*np.power(y,2)*z*np.power(w,2) +  a[90]*np.power(y,2)*w +  a[91]*np.power(y,2)*np.power(w,2) +  a[92]*np.power(y,2)*np.power(w,3) +  a[93]*y*z +  a[94]*y*np.power(z,2) +  a[95]*y*np.power(z,3) +  a[96]*y*np.power(z,4) +  a[97]*y*np.power(z,3)*w +  a[98]*y*np.power(z,2)*w +  a[99]*y*np.power(z,2)*np.power(w,2) + a[100]*y*z*w + a[101]*y*z*np.power(w,2) + a[102]*y*z*np.power(w,3) + a[103]*y*w + a[104]*y*np.power(w,2) + a[105]*y*np.power(w,3) + a[106]*y*np.power(w,4) + a[107]*z + a[108]*np.power(z,2) + a[109]*np.power(z,3) + a[110]*np.power(z,4) + a[111]*np.power(z,5) + a[112]*np.power(z,4)*w + a[113]*np.power(z,3)*w + a[114]*np.power(z,3)*np.power(w,2) + a[115]*np.power(z,2)*w + a[116]*np.power(z,2)*np.power(w,2) + a[117]*np.power(z,2)*np.power(w,3) + a[118]*z*w + a[119]*z*np.power(w,2) + a[120]*z*np.power(w,3) + a[121]*z*np.power(w,4) + a[122]*w + a[123]*np.power(w,2) + a[124]*np.power(w,3) + a[125]*np.power(w,4) + a[126]*np.power(w,5)
        Y = a[127] + a[128]*x + a[129]*np.power(x,2) + a[130]*np.power(x,3) + a[131]*np.power(x,4) + a[132]*np.power(x,5) + a[133]*np.power(x,4)*y + a[134]*np.power(x,4)*z + a[135]*np.power(x,4)*w + a[136]*np.power(x,3)*y + a[137]*np.power(x,3)*np.power(y,2) + a[138]*np.power(x,3)*y*z + a[139]*np.power(x,3)*y*w + a[140]*np.power(x,3)*z + a[141]*np.power(x,3)*np.power(z,2) + a[142]*np.power(x,3)*z*w + a[143]*np.power(x,3)*w + a[144]*np.power(x,3)*np.power(w,2) + a[145]*np.power(x,2)*y + a[146]*np.power(x,2)*np.power(y,2) + a[147]*np.power(x,2)*np.power(y,3) + a[148]*np.power(x,2)*np.power(y,2)*z + a[149]*np.power(x,2)*np.power(y,2)*w + a[150]*np.power(x,2)*y*z + a[151]*np.power(x,2)*y*np.power(z,2) + a[152]*np.power(x,2)*y*z*w + a[153]*np.power(x,2)*y*w + a[154]*np.power(x,2)*y*np.power(w,2) + a[155]*np.power(x,2)*z + a[156]*np.power(x,2)*np.power(z,2) + a[157]*np.power(x,2)*np.power(z,3) + a[158]*np.power(x,2)*np.power(z,2)*w + a[159]*np.power(x,2)*z*w + a[160]*np.power(x,2)*z*np.power(w,2) + a[161]*np.power(x,2)*w + a[162]*np.power(x,2)*np.power(w,2) + a[163]*np.power(x,2)*np.power(w,3) + a[164]*x*y + a[165]*x*np.power(y,2) + a[166]*x*np.power(y,3) + a[167]*x*np.power(y,4) + a[168]*x*np.power(y,3)*z + a[169]*x*np.power(y,3)*w + a[170]*x*np.power(y,2)*z + a[171]*x*np.power(y,2)*np.power(z,2) + a[172]*x*np.power(y,2)*z*w + a[173]*x*np.power(y,2)*w + a[174]*x*np.power(y,2)*np.power(w,2) + a[175]*x*y*z + a[176]*x*y*np.power(z,2) + a[177]*x*y*np.power(z,3) + a[178]*x*y*np.power(z,2)*w + a[179]*x*y*z*w + a[180]*x*y*z*np.power(w,2) + a[181]*x*y*w + a[182]*x*y*np.power(w,2) + a[183]*x*y*np.power(w,3) + a[184]*x*z + a[185]*x*np.power(z,2) + a[186]*x*np.power(z,3) + a[187]*x*np.power(z,4) + a[188]*x*np.power(z,3)*w + a[189]*x*np.power(z,2)*w + a[190]*x*np.power(z,2)*np.power(w,2) + a[191]*x*z*w + a[192]*x*z*np.power(w,2) + a[193]*x*z*np.power(w,3) + a[194]*x*w + a[195]*x*np.power(w,2) + a[196]*x*np.power(w,3) + a[197]*x*np.power(w,4) + a[198]*y + a[199]*np.power(y,2) + a[200]*np.power(y,3) + a[201]*np.power(y,4) + a[202]*np.power(y,5) + a[203]*np.power(y,4)*z + a[204]*np.power(y,4)*w + a[205]*np.power(y,3)*z + a[206]*np.power(y,3)*np.power(z,2) + a[207]*np.power(y,3)*z*w + a[208]*np.power(y,3)*w + a[209]*np.power(y,3)*np.power(w,2) + a[210]*np.power(y,2)*z + a[211]*np.power(y,2)*np.power(z,2) + a[212]*np.power(y,2)*np.power(z,3) + a[213]*np.power(y,2)*np.power(z,2)*w + a[214]*np.power(y,2)*z*w + a[215]*np.power(y,2)*z*np.power(w,2) + a[216]*np.power(y,2)*w + a[217]*np.power(y,2)*np.power(w,2) + a[218]*np.power(y,2)*np.power(w,3) + a[219]*y*z + a[220]*y*np.power(z,2) + a[221]*y*np.power(z,3) + a[222]*y*np.power(z,4) + a[223]*y*np.power(z,3)*w + a[224]*y*np.power(z,2)*w + a[225]*y*np.power(z,2)*np.power(w,2) + a[226]*y*z*w + a[227]*y*z*np.power(w,2) + a[228]*y*z*np.power(w,3) + a[229]*y*w + a[230]*y*np.power(w,2) + a[231]*y*np.power(w,3) + a[232]*y*np.power(w,4) + a[233]*z + a[234]*np.power(z,2) + a[235]*np.power(z,3) + a[236]*np.power(z,4) + a[237]*np.power(z,5) + a[238]*np.power(z,4)*w + a[239]*np.power(z,3)*w + a[240]*np.power(z,3)*np.power(w,2) + a[241]*np.power(z,2)*w + a[242]*np.power(z,2)*np.power(w,2) + a[243]*np.power(z,2)*np.power(w,3) + a[244]*z*w + a[245]*z*np.power(w,2) + a[246]*z*np.power(w,3) + a[247]*z*np.power(w,4) + a[248]*w + a[249]*np.power(w,2) + a[250]*np.power(w,3) + a[251]*np.power(w,4) + a[252]*np.power(w,5)
        Z = a[253] + a[254]*x + a[255]*np.power(x,2) + a[256]*np.power(x,3) + a[257]*np.power(x,4) + a[258]*np.power(x,5) + a[259]*np.power(x,4)*y + a[260]*np.power(x,4)*z + a[261]*np.power(x,4)*w + a[262]*np.power(x,3)*y + a[263]*np.power(x,3)*np.power(y,2) + a[264]*np.power(x,3)*y*z + a[265]*np.power(x,3)*y*w + a[266]*np.power(x,3)*z + a[267]*np.power(x,3)*np.power(z,2) + a[268]*np.power(x,3)*z*w + a[269]*np.power(x,3)*w + a[270]*np.power(x,3)*np.power(w,2) + a[271]*np.power(x,2)*y + a[272]*np.power(x,2)*np.power(y,2) + a[273]*np.power(x,2)*np.power(y,3) + a[274]*np.power(x,2)*np.power(y,2)*z + a[275]*np.power(x,2)*np.power(y,2)*w + a[276]*np.power(x,2)*y*z + a[277]*np.power(x,2)*y*np.power(z,2) + a[278]*np.power(x,2)*y*z*w + a[279]*np.power(x,2)*y*w + a[280]*np.power(x,2)*y*np.power(w,2) + a[281]*np.power(x,2)*z + a[282]*np.power(x,2)*np.power(z,2) + a[283]*np.power(x,2)*np.power(z,3) + a[284]*np.power(x,2)*np.power(z,2)*w + a[285]*np.power(x,2)*z*w + a[286]*np.power(x,2)*z*np.power(w,2) + a[287]*np.power(x,2)*w + a[288]*np.power(x,2)*np.power(w,2) + a[289]*np.power(x,2)*np.power(w,3) + a[290]*x*y + a[291]*x*np.power(y,2) + a[292]*x*np.power(y,3) + a[293]*x*np.power(y,4) + a[294]*x*np.power(y,3)*z + a[295]*x*np.power(y,3)*w + a[296]*x*np.power(y,2)*z + a[297]*x*np.power(y,2)*np.power(z,2) + a[298]*x*np.power(y,2)*z*w + a[299]*x*np.power(y,2)*w + a[300]*x*np.power(y,2)*np.power(w,2) + a[301]*x*y*z + a[302]*x*y*np.power(z,2) + a[303]*x*y*np.power(z,3) + a[304]*x*y*np.power(z,2)*w + a[305]*x*y*z*w + a[305]*x*y*z*np.power(w,2) + a[307]*x*y*w + a[308]*x*y*np.power(w,2) + a[309]*x*y*np.power(w,3) + a[310]*x*z + a[311]*x*np.power(z,2) + a[312]*x*np.power(z,3) + a[313]*x*np.power(z,4) + a[314]*x*np.power(z,3)*w + a[315]*x*np.power(z,2)*w + a[316]*x*np.power(z,2)*np.power(w,2) + a[317]*x*z*w + a[318]*x*z*np.power(w,2) + a[319]*x*z*np.power(w,3) + a[320]*x*w + a[321]*x*np.power(w,2) + a[322]*x*np.power(w,3) + a[323]*x*np.power(w,4) + a[324]*y + a[325]*np.power(y,2) + a[326]*np.power(y,3) + a[327]*np.power(y,4) + a[328]*np.power(y,5) + a[329]*np.power(y,4)*z + a[330]*np.power(y,4)*w + a[331]*np.power(y,3)*z + a[332]*np.power(y,3)*np.power(z,2) + a[333]*np.power(y,3)*z*w + a[334]*np.power(y,3)*w + a[335]*np.power(y,3)*np.power(w,2) + a[336]*np.power(y,2)*z + a[337]*np.power(y,2)*np.power(z,2) + a[338]*np.power(y,2)*np.power(z,3) + a[339]*np.power(y,2)*np.power(z,2)*w + a[340]*np.power(y,2)*z*w + a[341]*np.power(y,2)*z*np.power(w,2) + a[342]*np.power(y,2)*w + a[343]*np.power(y,2)*np.power(w,2) + a[344]*np.power(y,2)*np.power(w,3) + a[345]*y*z + a[346]*y*np.power(z,2) + a[347]*y*np.power(z,3) + a[348]*y*np.power(z,4) + a[349]*y*np.power(z,3)*w + a[350]*y*np.power(z,2)*w + a[351]*y*np.power(z,2)*np.power(w,2) + a[352]*y*z*w + a[353]*y*z*np.power(w,2) + a[354]*y*z*np.power(w,3) + a[355]*y*w + a[356]*y*np.power(w,2) + a[357]*y*np.power(w,3) + a[358]*y*np.power(w,4) + a[359]*z + a[360]*np.power(z,2) + a[361]*np.power(z,3) + a[362]*np.power(z,4) + a[363]*np.power(z,5) + a[364]*np.power(z,4)*w + a[365]*np.power(z,3)*w + a[366]*np.power(z,3)*np.power(w,2) + a[367]*np.power(z,2)*w + a[368]*np.power(z,2)*np.power(w,2) + a[369]*np.power(z,2)*np.power(w,3) + a[370]*z*w + a[371]*z*np.power(w,2) + a[372]*z*np.power(w,3) + a[373]*z*np.power(w,4) + a[374]*w + a[375]*np.power(w,2) + a[376]*np.power(w,3) + a[377]*np.power(w,4) + a[378]*np.power(w,5)
        W = a[379] + a[380]*x + a[381]*np.power(x,2) + a[382]*np.power(x,3) + a[383]*np.power(x,4) + a[384]*np.power(x,5) + a[385]*np.power(x,4)*y + a[386]*np.power(x,4)*z + a[387]*np.power(x,4)*w + a[388]*np.power(x,3)*y + a[389]*np.power(x,3)*np.power(y,2) + a[390]*np.power(x,3)*y*z + a[391]*np.power(x,3)*y*w + a[392]*np.power(x,3)*z + a[393]*np.power(x,3)*np.power(z,2) + a[394]*np.power(x,3)*z*w + a[395]*np.power(x,3)*w + a[396]*np.power(x,3)*np.power(w,2) + a[397]*np.power(x,2)*y + a[398]*np.power(x,2)*np.power(y,2) + a[399]*np.power(x,2)*np.power(y,3) + a[400]*np.power(x,2)*np.power(y,2)*z + a[401]*np.power(x,2)*np.power(y,2)*w + a[402]*np.power(x,2)*y*z + a[403]*np.power(x,2)*y*np.power(z,2) + a[404]*np.power(x,2)*y*z*w + a[405]*np.power(x,2)*y*w + a[406]*np.power(x,2)*y*np.power(w,2) + a[407]*np.power(x,2)*z + a[408]*np.power(x,2)*np.power(z,2) + a[409]*np.power(x,2)*np.power(z,3) + a[410]*np.power(x,2)*np.power(z,2)*w + a[411]*np.power(x,2)*z*w + a[412]*np.power(x,2)*z*np.power(w,2) + a[413]*np.power(x,2)*w + a[414]*np.power(x,2)*np.power(w,2) + a[415]*np.power(x,2)*np.power(w,3) + a[416]*x*y + a[417]*x*np.power(y,2) + a[418]*x*np.power(y,3) + a[419]*x*np.power(y,4) + a[420]*x*np.power(y,3)*z + a[421]*x*np.power(y,3)*w + a[422]*x*np.power(y,2)*z + a[423]*x*np.power(y,2)*np.power(z,2) + a[424]*x*np.power(y,2)*z*w + a[425]*x*np.power(y,2)*w + a[426]*x*np.power(y,2)*np.power(w,2) + a[427]*x*y*z + a[428]*x*y*np.power(z,2) + a[429]*x*y*np.power(z,3) + a[430]*x*y*np.power(z,2)*w + a[431]*x*y*z*w + a[432]*x*y*z*np.power(w,2) + a[433]*x*y*w + a[434]*x*y*np.power(w,2) + a[435]*x*y*np.power(w,3) + a[436]*x*z + a[437]*x*np.power(z,2) + a[438]*x*np.power(z,3) + a[439]*x*np.power(z,4) + a[440]*x*np.power(z,3)*w + a[441]*x*np.power(z,2)*w + a[442]*x*np.power(z,2)*np.power(w,2) + a[443]*x*z*w + a[444]*x*z*np.power(w,2) + a[445]*x*z*np.power(w,3) + a[446]*x*w + a[447]*x*np.power(w,2) + a[448]*x*np.power(w,3) + a[449]*x*np.power(w,4) + a[450]*y + a[451]*np.power(y,2) + a[452]*np.power(y,3) + a[453]*np.power(y,4) + a[454]*np.power(y,5) + a[455]*np.power(y,4)*z + a[456]*np.power(y,4)*w + a[457]*np.power(y,3)*z + a[458]*np.power(y,3)*np.power(z,2) + a[459]*np.power(y,3)*z*w + a[460]*np.power(y,3)*w + a[461]*np.power(y,3)*np.power(w,2) + a[462]*np.power(y,2)*z + a[463]*np.power(y,2)*np.power(z,2) + a[464]*np.power(y,2)*np.power(z,3) + a[465]*np.power(y,2)*np.power(z,2)*w + a[466]*np.power(y,2)*z*w + a[467]*np.power(y,2)*z*np.power(w,2) + a[468]*np.power(y,2)*w + a[469]*np.power(y,2)*np.power(w,2) + a[470]*np.power(y,2)*np.power(w,3) + a[471]*y*z + a[472]*y*np.power(z,2) + a[473]*y*np.power(z,3) + a[474]*y*np.power(z,4) + a[475]*y*np.power(z,3)*w + a[476]*y*np.power(z,2)*w + a[477]*y*np.power(z,2)*np.power(w,2) + a[478]*y*z*w + a[479]*y*z*np.power(w,2) + a[480]*y*z*np.power(w,3) + a[481]*y*w + a[482]*y*np.power(w,2) + a[483]*y*np.power(w,3) + a[484]*y*np.power(w,4) + a[485]*z + a[486]*np.power(z,2) + a[487]*np.power(z,3) + a[488]*np.power(z,4) + a[489]*np.power(z,5) + a[490]*np.power(z,4)*w + a[491]*np.power(z,3)*w + a[492]*np.power(z,3)*np.power(w,2) + a[493]*np.power(z,2)*w + a[494]*np.power(z,2)*np.power(w,2) + a[495]*np.power(z,2)*np.power(w,3) + a[496]*z*w + a[497]*z*np.power(w,2) + a[498]*z*np.power(w,3) + a[499]*z*np.power(w,4) + a[500]*w + a[501]*np.power(w,2) + a[502]*np.power(w,3) + a[503]*np.power(w,4) + a[504]*np.power(w,5)
        variables = (X,Y,Z,W)
    # Q wie I
    if char[0] == "Q":
        x = oldvariables[0]
        y = oldvariables[1]
        z = oldvariables[2]
        X =  a[1] +  a[2]*x +  a[3]*np.power(x,2) +  a[4]*x*y +  a[5]*x*z +  a[6]*y +  a[7]*np.power(y,2) +  a[8]*y*z +  a[9]*z + a[10]*np.power(z,2)
        Y = a[11] + a[12]*x + a[13]*np.power(x,2) + a[14]*x*y + a[15]*x*z + a[16]*y + a[17]*np.power(y,2) + a[18]*y*z + a[19]*z + a[20]*np.power(z,2)
        Z = a[21] + a[22]*x + a[23]*np.power(x,2) + a[24]*x*y + a[25]*x*z + a[26]*y + a[27]*np.power(y,2) + a[28]*y*z + a[29]*z + a[30]*np.power(z,2)
        X = x + epsilon * X
        Y = y + epsilon * Y
        Z = z + epsilon * Z
        variables = (X,Y,Z)
    # R wie J
    if char[0] == "R":
        x = oldvariables[0]
        y = oldvariables[1]
        z = oldvariables[2]
        X =  a[1] +  a[2]*x +  a[3]*np.power(x,2) +  a[4]*np.power(x,3) +  a[5]*np.power(x,2)*y +  a[6]*np.power(x,2)*z +  a[7]*x*y +  a[8]*x*np.power(y,2) +  a[9]*x*y*z + a[10]*x*z + a[11]*x*np.power(z,2) + a[12]*y + a[13]*np.power(y,2) + a[14]*np.power(y,3) + a[15]*np.power(y,2)*z + a[16]*y*z + a[17]*y*np.power(z,2) + a[18]*z + a[19]*np.power(z,2) + a[20]*np.power(z,3)
        Y = a[21] + a[22]*x + a[23]*np.power(x,2) + a[24]*np.power(x,3) + a[25]*np.power(x,2)*y + a[26]*np.power(x,2)*z + a[27]*x*y + a[28]*x*np.power(y,2) + a[29]*x*y*z + a[30]*x*z + a[31]*x*np.power(z,2) + a[32]*y + a[33]*np.power(y,2) + a[34]*np.power(y,3) + a[35]*np.power(y,2)*z + a[36]*y*z + a[37]*y*np.power(z,2) + a[38]*z + a[39]*np.power(z,2) + a[40]*np.power(z,3)
        Z = a[41] + a[42]*x + a[43]*np.power(x,2) + a[44]*np.power(x,3) + a[45]*np.power(x,2)*y + a[46]*np.power(x,2)*z + a[47]*x*y + a[48]*x*np.power(y,2) + a[49]*x*y*z + a[50]*x*z + a[51]*x*np.power(z,2) + a[52]*y + a[53]*np.power(y,2) + a[54]*np.power(y,3) + a[55]*np.power(y,2)*z + a[56]*y*z + a[57]*y*np.power(z,2) + a[58]*z + a[59]*np.power(z,2) + a[60]*np.power(z,3)
        X = x + epsilon * X
        Y = y + epsilon * Y
        Z = z + epsilon * Z
        variables = (X,Y,Z)    
    # S wie K
    if char[0] == "S":
        x = oldvariables[0]
        y = oldvariables[1]
        z = oldvariables[2]
        X =  a[1] +  a[2]*x +  a[3]*np.power(x,2) +  a[4]*np.power(x,3) +  a[5]*np.power(x,4) +  a[6]*np.power(x,3)*y +  a[7]*np.power(x,3)*z +  a[8]*np.power(x,2)*y +  a[9]*np.power(x,2)*np.power(y,2) + a[10]*np.power(x,2)*y*z + a[11]*np.power(x,2)*z + a[12]*np.power(x,2)*np.power(z,2) + a[13]*x*y + a[14]*x*np.power(y,2) + a[15]*x*np.power(y,3) + a[16]*x*np.power(y,2)*z + a[17]*x*y*z + a[18]*x*y*np.power(z,2) + a[19]*x*z + a[20]*x*np.power(z,2) + a[21]*x*np.power(z,3) + a[22]*y + a[23]*np.power(y,2) + a[24]*np.power(y,3) + a[25]*np.power(y,4) + a[26]*np.power(y,3)*z + a[27]*np.power(y,2)*z + a[28]*np.power(y,2)*np.power(z,2) + a[29]*y*z +  a[30]*y*np.power(z,2) +  a[31]*y*np.power(z,3) +  a[32]*z +  a[33]*np.power(z,2) +  a[34]*np.power(z,3) + a[35]*np.power(z,4)
        Y = a[36] + a[37]*x + a[38]*np.power(x,2) + a[39]*np.power(x,3) + a[40]*np.power(x,4) + a[41]*np.power(x,3)*y + a[42]*np.power(x,3)*z + a[43]*np.power(x,2)*y + a[44]*np.power(x,2)*np.power(y,2) + a[45]*np.power(x,2)*y*z + a[46]*np.power(x,2)*z + a[47]*np.power(x,2)*np.power(z,2) + a[48]*x*y + a[49]*x*np.power(y,2) + a[50]*x*np.power(y,3) + a[51]*x*np.power(y,2)*z + a[52]*x*y*z + a[53]*x*y*np.power(z,2) + a[54]*x*z + a[55]*x*np.power(z,2) + a[56]*x*np.power(z,3) + a[57]*y + a[58]*np.power(y,2) + a[59]*np.power(y,3) + a[60]*np.power(y,4) + a[61]*np.power(y,3)*z + a[62]*np.power(y,2)*z + a[63]*np.power(y,2)*np.power(z,2) + a[64]*y*z +  a[65]*y*np.power(z,2) +  a[66]*y*np.power(z,3) +  a[67]*z +  a[68]*np.power(z,2) +  a[69]*np.power(z,3) + a[70]*np.power(z,4)
        Z = a[71] + a[72]*x + a[73]*np.power(x,2) + a[74]*np.power(x,3) + a[75]*np.power(x,4) + a[76]*np.power(x,3)*y + a[77]*np.power(x,3)*z + a[78]*np.power(x,2)*y + a[79]*np.power(x,2)*np.power(y,2) + a[80]*np.power(x,2)*y*z + a[81]*np.power(x,2)*z + a[82]*np.power(x,2)*np.power(z,2) + a[83]*x*y + a[84]*x*np.power(y,2) + a[85]*x*np.power(y,3) + a[86]*x*np.power(y,2)*z + a[87]*x*y*z + a[88]*x*y*np.power(z,2) + a[89]*x*z + a[90]*x*np.power(z,2) + a[91]*x*np.power(z,3) + a[92]*y + a[93]*np.power(y,2) + a[94]*np.power(y,3) + a[95]*np.power(y,4) + a[96]*np.power(y,3)*z + a[97]*np.power(y,2)*z + a[98]*np.power(y,2)*np.power(z,2) + a[99]*y*z + a[100]*y*np.power(z,2) + a[101]*y*np.power(z,3) + a[102]*z + a[103]*np.power(z,2) + a[104]*np.power(z,3) + a[105]*np.power(z,4)
        X = x + epsilon * X
        Y = y + epsilon * Y
        Z = z + epsilon * Z
        variables = (X,Y,Z)
    # T wie L
    if char[0] == "T":
        x = oldvariables[0]
        y = oldvariables[1]
        z = oldvariables[2]
        X =   a[1] +   a[2]*x +   a[3]*np.power(x,2) +   a[4]*np.power(x,3) +   a[5]*np.power(x,4) +   a[6]*np.power(x,5) +   a[7]*np.power(x,4)*y +   a[8]*np.power(x,4)*z +   a[9]*np.power(x,3)*y +  a[10]*np.power(x,3)*np.power(y,2) + a[11]*np.power(x,3)*y*z +  a[12]*np.power(x,3)*z +  a[13]*np.power(x,3)*np.power(z,2) +  a[14]*np.power(x,2)*y +  a[15]*np.power(x,2)*np.power(y,2) +  a[16]*np.power(x,2)*np.power(y,3) +  a[17]*np.power(x,2)*np.power(y,2)*z +  a[18]*np.power(x,2)*y*z +  a[19]*np.power(x,2)*y*np.power(z,2) +  a[20]*np.power(x,2)*z +  a[21]*np.power(x,2)*np.power(z,2) +  a[22]*np.power(x,2)*np.power(z,3) +  a[23]*x*y +  a[24]*x*np.power(y,2) +  a[25]*x*np.power(y,3) +  a[26]*x*np.power(y,4) +  a[27]*x*np.power(y,3)*z +  a[28]*x*np.power(y,2)*z +  a[29]*x*np.power(y,2)*np.power(z,2) +  a[30]*x*y*z +  a[31]*x*y*np.power(z,2) +  a[32]*x*y*np.power(z,3) +  a[33]*x*z +  a[34]*x*np.power(z,2) +  a[35]*x*np.power(z,3) +  a[36]*x*np.power(z,4) +  a[37]*y +  a[38]*np.power(y,2) +  a[39]*np.power(y,3) +  a[40]*np.power(y,4) +  a[41]*np.power(y,5) +  a[42]*np.power(y,4)*z +  a[43]*np.power(y,3)*z +  a[44]*np.power(y,3)*np.power(z,2) +  a[45]*np.power(y,2)*z +  a[46]*np.power(y,2)*np.power(z,2) +  a[47]*np.power(y,2)*np.power(z,3) +  a[48]*y*z +  a[49]*y*np.power(z,2) +  a[50]*y*np.power(z,3) +  a[51]*y*np.power(z,4) +  a[52]*z +  a[53]*np.power(z,2) +  a[54]*np.power(z,3) +  a[55]*np.power(z,4) +  a[56]*np.power(z,5)
        Y =  a[57] +  a[58]*x +  a[59]*np.power(x,2) +  a[60]*np.power(x,3) +  a[61]*np.power(x,4) +  a[62]*np.power(x,5) +  a[63]*np.power(x,4)*y +  a[64]*np.power(x,4)*z +  a[65]*np.power(x,3)*y +  a[66]*np.power(x,3)*np.power(y,2) + a[67]*np.power(x,3)*y*z +  a[68]*np.power(x,3)*z +  a[69]*np.power(x,3)*np.power(z,2) +  a[70]*np.power(x,2)*y +  a[71]*np.power(x,2)*np.power(y,2) +  a[72]*np.power(x,2)*np.power(y,3) +  a[73]*np.power(x,2)*np.power(y,2)*z +  a[74]*np.power(x,2)*y*z +  a[75]*np.power(x,2)*y*np.power(z,2) +  a[76]*np.power(x,2)*z +  a[77]*np.power(x,2)*np.power(z,2) +  a[78]*np.power(x,2)*np.power(z,3) +  a[79]*x*y +  a[80]*x*np.power(y,2) +  a[81]*x*np.power(y,3) +  a[82]*x*np.power(y,4) +  a[83]*x*np.power(y,3)*z +  a[84]*x*np.power(y,2)*z +  a[85]*x*np.power(y,2)*np.power(z,2) +  a[86]*x*y*z +  a[87]*x*y*np.power(z,2) +  a[88]*x*y*np.power(z,3) +  a[89]*x*z +  a[90]*x*np.power(z,2) +  a[91]*x*np.power(z,3) +  a[92]*x*np.power(z,4) +  a[93]*y +  a[94]*np.power(y,2) +  a[95]*np.power(y,3) +  a[96]*np.power(y,4) +  a[97]*np.power(y,5) +  a[98]*np.power(y,4)*z +  a[99]*np.power(y,3)*z + a[100]*np.power(y,3)*np.power(z,2) + a[101]*np.power(y,2)*z + a[102]*np.power(y,2)*np.power(z,2) + a[103]*np.power(y,2)*np.power(z,3) + a[104]*y*z + a[105]*y*np.power(z,2) + a[106]*y*np.power(z,3) + a[107]*y*np.power(z,4) + a[108]*z + a[109]*np.power(z,2) + a[110]*np.power(z,3) + a[111]*np.power(z,4) + a[112]*np.power(z,5)
        Z = a[113] + a[114]*x + a[115]*np.power(x,2) + a[116]*np.power(x,3) + a[117]*np.power(x,4) + a[118]*np.power(x,5) + a[119]*np.power(x,4)*y + a[120]*np.power(x,4)*z + a[121]*np.power(x,3)*y + a[122]*np.power(x,3)*np.power(y,2)+ a[123]*np.power(x,3)*y*z + a[124]*np.power(x,3)*z + a[125]*np.power(x,3)*np.power(z,2) + a[126]*np.power(x,2)*y + a[127]*np.power(x,2)*np.power(y,2) + a[128]*np.power(x,2)*np.power(y,3) + a[129]*np.power(x,2)*np.power(y,2)*z + a[130]*np.power(x,2)*y*z + a[131]*np.power(x,2)*y*np.power(z,2) + a[132]*np.power(x,2)*z + a[133]*np.power(x,2)*np.power(z,2) + a[134]*np.power(x,2)*np.power(z,3) + a[135]*x*y + a[136]*x*np.power(y,2) + a[137]*x*np.power(y,3) + a[138]*x*np.power(y,4) + a[139]*x*np.power(y,3)*z + a[140]*x*np.power(y,2)*z + a[141]*x*np.power(y,2)*np.power(z,2) + a[142]*x*y*z + a[143]*x*y*np.power(z,2) + a[144]*x*y*np.power(z,3) + a[145]*x*z + a[146]*x*np.power(z,2) + a[147]*x*np.power(z,3) + a[148]*x*np.power(z,4) + a[149]*y + a[150]*np.power(y,2) + a[151]*np.power(y,3) + a[152]*np.power(y,4) + a[153]*np.power(y,5) + a[154]*np.power(y,4)*z + a[155]*np.power(y,3)*z + a[156]*np.power(y,3)*np.power(z,2) + a[157]*np.power(y,2)*z + a[158]*np.power(y,2)*np.power(z,2) + a[159]*np.power(y,2)*np.power(z,3) + a[160]*y*z + a[161]*y*np.power(z,2) + a[162]*y*np.power(z,3) + a[163]*y*np.power(z,4) + a[164]*z + a[165]*np.power(z,2) + a[166]*np.power(z,3) + a[167]*np.power(z,4) + a[168]*np.power(z,5)
        X = x + epsilon * X
        Y = y + epsilon * Y
        Z = z + epsilon * Z
        variables = (X,Y,Z)
    # U wie M
    if char[0] == "U":
        x = oldvariables[0]
        y = oldvariables[1]
        z = oldvariables[2]
        w = oldvariables[3]
        X =  a[1] +  a[2]*x +  a[3]*np.power(x,2) +  a[4]*x*y +  a[5]*x*z +  a[6]*x*w +  a[7]*y +  a[8]*np.power(y,2) +  a[9]*y*z + a[10]*y*w + a[11]*z + a[12]*np.power(z,2) + a[13]*z*w + a[14]*w + a[15]*np.power(w,2)
        Y = a[16] + a[17]*x + a[18]*np.power(x,2) + a[19]*x*y + a[20]*x*z + a[21]*x*w + a[22]*y + a[23]*np.power(y,2) + a[24]*y*z + a[25]*y*w + a[26]*z + a[27]*np.power(z,2) + a[28]*z*w + a[29]*w + a[30]*np.power(w,2)
        Z = a[31] + a[32]*x + a[33]*np.power(x,2) + a[34]*x*y + a[35]*x*z + a[36]*x*w + a[37]*y + a[38]*np.power(y,2) + a[39]*y*z + a[40]*y*w + a[41]*z + a[42]*np.power(z,2) + a[43]*z*w + a[44]*w + a[45]*np.power(w,2)
        W = a[46] + a[47]*x + a[48]*np.power(x,2) + a[49]*x*y + a[50]*x*z + a[51]*x*w + a[52]*y + a[53]*np.power(y,2) + a[54]*y*z + a[55]*y*w + a[56]*z + a[57]*np.power(z,2) + a[58]*z*w + a[59]*w + a[60]*np.power(w,2)
        X = x + epsilon * X
        Y = y + epsilon * Y
        Z = z + epsilon * Z
        W = w + epsilon * W
        variables = (X,Y,Z,W)
    # V wie N 
    if char[0] == "V":
        x = oldvariables[0]
        y = oldvariables[1]
        z = oldvariables[2]
        w = oldvariables[3]
        X =   a[1] +   a[2]*x +   a[3]*np.power(x,2) +   a[4]*np.power(x,3) +   a[5]*np.power(x,2)*y +   a[6]*np.power(x,2)*z +   a[7]*np.power(x,2)*w +   a[8]*x*y +   a[9]*x*np.power(y,2) +  a[10]*x*y*z +  a[11]*x*y*w +  a[12]*x*z +  a[13]*x*np.power(z,2) +  a[14]*x*z*w +  a[15]*x*w +  a[16]*x*np.power(w,2) +  a[17]*y +  a[18]*np.power(y,2) +  a[19]*np.power(y,3) +  a[20]*np.power(y,2)*z +  a[21]*np.power(y,2)*w +  a[22]*y*z +  a[23]*y*np.power(z,2) +  a[24]*y*z*w +  a[25]*y*w +  a[26]*y*np.power(w,2) +  a[27]*z +  a[28]*np.power(z,2) +  a[29]*np.power(z,3) +  a[30]*np.power(z,2)*w +  a[31]*z*w +  a[32]*z*np.power(w,2) +  a[33]*w +  a[34]*np.power(w,2) +  a[35]*np.power(w,3)
        Y =  a[36] +  a[37]*x +  a[38]*np.power(x,2) +  a[39]*np.power(x,3) +  a[40]*np.power(x,2)*y +  a[41]*np.power(x,2)*z +  a[42]*np.power(x,2)*w +  a[43]*x*y +  a[44]*x*np.power(y,2) +  a[45]*x*y*z +  a[46]*x*y*w +  a[47]*x*z +  a[48]*x*np.power(z,2) +  a[49]*x*z*w +  a[50]*x*w +  a[51]*x*np.power(w,2) +  a[52]*y +  a[53]*np.power(y,2) +  a[54]*np.power(y,3) +  a[55]*np.power(y,2)*z +  a[56]*np.power(y,2)*w +  a[57]*y*z +  a[58]*y*np.power(z,2) +  a[59]*y*z*w +  a[60]*y*w +  a[61]*y*np.power(w,2) +  a[62]*z +  a[63]*np.power(z,2) +  a[64]*np.power(z,3) +  a[65]*np.power(z,2)*w +  a[66]*z*w +  a[67]*z*np.power(w,2) +  a[68]*w +  a[69]*np.power(w,2) +  a[70]*np.power(w,3)
        Z =  a[71] +  a[72]*x +  a[73]*np.power(x,2) +  a[74]*np.power(x,3) +  a[75]*np.power(x,2)*y +  a[76]*np.power(x,2)*z +  a[77]*np.power(x,2)*w +  a[78]*x*y +  a[79]*x*np.power(y,2) +  a[80]*x*y*z +  a[81]*x*y*w +  a[82]*x*z +  a[83]*x*np.power(z,2) +  a[84]*x*z*w +  a[85]*x*w +  a[86]*x*np.power(w,2) +  a[87]*y +  a[88]*np.power(y,2) +  a[89]*np.power(y,3) +  a[90]*np.power(y,2)*z +  a[91]*np.power(y,2)*w +  a[92]*y*z +  a[93]*y*np.power(z,2) +  a[94]*y*z*w +  a[95]*y*w +  a[96]*y*np.power(w,2) +  a[97]*z +  a[98]*np.power(z,2) +  a[99]*np.power(z,3) + a[100]*np.power(z,2)*w + a[101]*z*w + a[102]*z*np.power(w,2) + a[103]*w + a[104]*np.power(w,2) + a[105]*np.power(w,3)
        W = a[106] + a[107]*x + a[108]*np.power(x,2) + a[109]*np.power(x,3) + a[110]*np.power(x,2)*y + a[111]*np.power(x,2)*z + a[112]*np.power(x,2)*w + a[113]*x*y + a[114]*x*np.power(y,2) + a[115]*x*y*z + a[116]*x*y*w + a[117]*x*z + a[118]*x*np.power(z,2) + a[119]*x*z*w + a[120]*x*w + a[121]*x*np.power(w,2) + a[122]*y + a[123]*np.power(y,2) + a[124]*np.power(y,3) + a[125]*np.power(y,2)*z + a[126]*np.power(y,2)*w + a[127]*y*z + a[128]*y*np.power(z,2) + a[129]*y*z*w + a[130]*y*w + a[131]*y*np.power(w,2) + a[132]*z + a[133]*np.power(z,2) + a[134]*np.power(z,3) + a[135]*np.power(z,2)*w + a[136]*z*w + a[137]*z*np.power(w,2) + a[138]*w + a[139]*np.power(w,2) + a[140]*np.power(w,3)
        X = x + epsilon * X
        Y = y + epsilon * Y
        Z = z + epsilon * Z
        W = w + epsilon * W
        variables = (X,Y,Z,W)
    # W wie O
    if char[0] == "W":
        x = oldvariables[0]
        y = oldvariables[1]
        z = oldvariables[2]
        w = oldvariables[3]
        X =   a[1] +   a[2]*x +   a[3]*np.power(x,2) +   a[4]*np.power(x,3) +   a[5]*np.power(x,4) +   a[6]*np.power(x,3)*y +   a[7]*np.power(x,3)*z +   a[8]*np.power(x,3)*w +   a[9]*np.power(x,2)*y +  a[10]*np.power(x,2)*np.power(y,2) +  a[11]*np.power(x,2)*y*z +  a[12]*np.power(x,2)*y*w +  a[13]*np.power(x,2)*z +  a[14]*np.power(x,2)*np.power(z,2) +  a[15]*np.power(x,2)*z*w +  a[16]*np.power(x,2)*w +  a[17]*np.power(x,2)*np.power(w,2) +  a[18]*x*y +  a[19]*x*np.power(y,2) +  a[20]*x*np.power(y,3) +  a[21]*x*np.power(y,2)*z +  a[22]*x*np.power(y,2)*w +  a[23]*x*y*z +  a[24]*x*y*np.power(z,2) +  a[25]*x*y*z*w +  a[26]*x*y*w +  a[27]*x*y*np.power(w,2) +  a[28]*x*z +  a[29]*x*np.power(z,2) +  a[30]*x*np.power(z,3) +  a[31]*x*np.power(z,2)*w +  a[32]*x*z*w +  a[33]*x*z*np.power(w,2) +  a[34]*x*w +  a[35]*x*np.power(w,2) +  a[36]*x*np.power(w,3) +  a[37]*y +  a[38]*np.power(y,2) +  a[39]*np.power(y,3) +  a[40]*np.power(y,4) +  a[41]*np.power(y,3)*z +  a[42]*np.power(y,3)*w +  a[43]*np.power(y,2)*z +  a[44]*np.power(y,2)*np.power(z,2) +  a[45]*np.power(y,2)*z*w +  a[46]*np.power(y,2)*w +  a[47]*np.power(y,2)*np.power(w,2) +  a[48]*y*z +  a[49]*y*np.power(z,2) +  a[50]*y*np.power(z,3) +  a[51]*y*np.power(z,2)*w +  a[52]*y*z*w +  a[53]*y*z*np.power(w,2) +  a[54]*y*w +  a[55]*y*np.power(w,2) +  a[56]*y*np.power(w,3) +  a[57]*z +  a[58]*np.power(z,2) +  a[59]*np.power(z,3) +  a[60]*np.power(z,4) +  a[61]*np.power(z,3)*w +  a[62]*np.power(z,2)*w +  a[63]*np.power(z,2)*np.power(w,2) +  a[64]*z*w +  a[65]*z*np.power(w,2) +  a[66]*z*np.power(w,3) +  a[67]*w +  a[68]*np.power(w,2) +  a[69]*np.power(w,3) +  a[70]*np.power(w,4)
        Y =  a[71] +  a[72]*x +  a[73]*np.power(x,2) +  a[74]*np.power(x,3) +  a[75]*np.power(x,4) +  a[76]*np.power(x,3)*y +  a[77]*np.power(x,3)*z +  a[78]*np.power(x,3)*w +  a[79]*np.power(x,2)*y +  a[80]*np.power(x,2)*np.power(y,2) +  a[81]*np.power(x,2)*y*z +  a[82]*np.power(x,2)*y*w +  a[83]*np.power(x,2)*z +  a[84]*np.power(x,2)*np.power(z,2) +  a[85]*np.power(x,2)*z*w +  a[86]*np.power(x,2)*w +  a[87]*np.power(x,2)*np.power(w,2) +  a[88]*x*y +  a[89]*x*np.power(y,2) +  a[90]*x*np.power(y,3) +  a[91]*x*np.power(y,2)*z +  a[92]*x*np.power(y,2)*w +  a[93]*x*y*z +  a[94]*x*y*np.power(z,2) +  a[95]*x*y*z*w +  a[96]*x*y*w +  a[97]*x*y*np.power(w,2) +  a[98]*x*z +  a[99]*x*np.power(z,2) + a[100]*x*np.power(z,3) + a[101]*x*np.power(z,2)*w + a[102]*x*z*w + a[103]*x*z*np.power(w,2) + a[104]*x*w + a[105]*x*np.power(w,2) + a[106]*x*np.power(w,3) + a[107]*y + a[108]*np.power(y,2) + a[109]*np.power(y,3) + a[110]*np.power(y,4) + a[111]*np.power(y,3)*z + a[112]*np.power(y,3)*w + a[113]*np.power(y,2)*z + a[114]*np.power(y,2)*np.power(z,2) + a[115]*np.power(y,2)*z*w + a[116]*np.power(y,2)*w + a[117]*np.power(y,2)*np.power(w,2) + a[118]*y*z + a[119]*y*np.power(z,2) + a[120]*y*np.power(z,3) + a[121]*y*np.power(z,2)*w + a[122]*y*z*w + a[123]*y*z*np.power(w,2) + a[124]*y*w + a[125]*y*np.power(w,2) + a[126]*y*np.power(w,3) + a[127]*z + a[128]*np.power(z,2) + a[129]*np.power(z,3) + a[130]*np.power(z,4) + a[131]*np.power(z,3)*w + a[132]*np.power(z,2)*w + a[133]*np.power(z,2)*np.power(w,2) + a[134]*z*w + a[135]*z*np.power(w,2) + a[136]*z*np.power(w,3) + a[137]*w + a[138]*np.power(w,2) + a[139]*np.power(w,3) + a[140]*np.power(w,4)
        Z = a[141] + a[142]*x + a[143]*np.power(x,2) + a[144]*np.power(x,3) + a[145]*np.power(x,4) + a[146]*np.power(x,3)*y + a[147]*np.power(x,3)*z + a[148]*np.power(x,3)*w + a[149]*np.power(x,2)*y + a[150]*np.power(x,2)*np.power(y,2) + a[151]*np.power(x,2)*y*z + a[152]*np.power(x,2)*y*w + a[153]*np.power(x,2)*z + a[154]*np.power(x,2)*np.power(z,2) + a[155]*np.power(x,2)*z*w + a[156]*np.power(x,2)*w + a[157]*np.power(x,2)*np.power(w,2) + a[158]*x*y + a[159]*x*np.power(y,2) + a[160]*x*np.power(y,3) + a[161]*x*np.power(y,2)*z + a[162]*x*np.power(y,2)*w + a[163]*x*y*z + a[164]*x*y*np.power(z,2) + a[165]*x*y*z*w + a[166]*x*y*w + a[167]*x*y*np.power(w,2) + a[168]*x*z + a[169]*x*np.power(z,2) + a[170]*x*np.power(z,3) + a[171]*x*np.power(z,2)*w + a[172]*x*z*w + a[173]*x*z*np.power(w,2) + a[174]*x*w + a[175]*x*np.power(w,2) + a[176]*x*np.power(w,3) + a[177]*y + a[178]*np.power(y,2) + a[179]*np.power(y,3) + a[180]*np.power(y,4) + a[181]*np.power(y,3)*z + a[182]*np.power(y,3)*w + a[183]*np.power(y,2)*z + a[184]*np.power(y,2)*np.power(z,2) + a[185]*np.power(y,2)*z*w + a[186]*np.power(y,2)*w + a[187]*np.power(y,2)*np.power(w,2) + a[188]*y*z + a[189]*y*np.power(z,2) + a[190]*y*np.power(z,3) + a[191]*y*np.power(z,2)*w + a[192]*y*z*w + a[193]*y*z*np.power(w,2) + a[194]*y*w + a[195]*y*np.power(w,2) + a[196]*y*np.power(w,3) + a[197]*z + a[198]*np.power(z,2) + a[199]*np.power(z,3) + a[200]*np.power(z,4) + a[201]*np.power(z,3)*w + a[202]*np.power(z,2)*w + a[203]*np.power(z,2)*np.power(w,2) + a[204]*z*w + a[205]*z*np.power(w,2) + a[206]*z*np.power(w,3) + a[207]*w + a[208]*np.power(w,2) + a[209]*np.power(w,3) + a[210]*np.power(w,4)
        W = a[211] + a[212]*x + a[213]*np.power(x,2) + a[214]*np.power(x,3) + a[215]*np.power(x,4) + a[216]*np.power(x,3)*y + a[217]*np.power(x,3)*z + a[218]*np.power(x,3)*w + a[219]*np.power(x,2)*y + a[220]*np.power(x,2)*np.power(y,2) + a[221]*np.power(x,2)*y*z + a[222]*np.power(x,2)*y*w + a[223]*np.power(x,2)*z + a[224]*np.power(x,2)*np.power(z,2) + a[225]*np.power(x,2)*z*w + a[226]*np.power(x,2)*w + a[227]*np.power(x,2)*np.power(w,2) + a[228]*x*y + a[229]*x*np.power(y,2) + a[230]*x*np.power(y,3) + a[231]*x*np.power(y,2)*z + a[232]*x*np.power(y,2)*w + a[233]*x*y*z + a[234]*x*y*np.power(z,2) + a[235]*x*y*z*w + a[236]*x*y*w + a[237]*x*y*np.power(w,2) + a[238]*x*z + a[239]*x*np.power(z,2) + a[240]*x*np.power(z,3) + a[241]*x*np.power(z,2)*w + a[242]*x*z*w + a[243]*x*z*np.power(w,2) + a[244]*x*w + a[245]*x*np.power(w,2) + a[246]*x*np.power(w,3) + a[247]*y + a[248]*np.power(y,2) + a[249]*np.power(y,3) + a[250]*np.power(y,4) + a[251]*np.power(y,3)*z + a[252]*np.power(y,3)*w + a[253]*np.power(y,2)*z + a[254]*np.power(y,2)*np.power(z,2) + a[255]*np.power(y,2)*z*w + a[256]*np.power(y,2)*w + a[257]*np.power(y,2)*np.power(w,2) + a[258]*y*z + a[259]*y*np.power(z,2) + a[260]*y*np.power(z,3) + a[261]*y*np.power(z,2)*w + a[262]*y*z*w + a[263]*y*z*np.power(w,2) + a[264]*y*w + a[265]*y*np.power(w,2) + a[266]*y*np.power(w,3) + a[267]*z + a[268]*np.power(z,2) + a[269]*np.power(z,3) + a[270]*np.power(z,4) + a[271]*np.power(z,3)*w + a[272]*np.power(z,2)*w + a[273]*np.power(z,2)*np.power(w,2) + a[274]*z*w + a[275]*z*np.power(w,2) + a[276]*z*np.power(w,3) + a[277]*w + a[278]*np.power(w,2) + a[279]*np.power(w,3) + a[280]*np.power(w,4) 
        X = x + epsilon * X
        Y = y + epsilon * Y
        Z = z + epsilon * Z
        W = w + epsilon * W
        variables = (X,Y,Z,W)
    # X wie P
    if char[0] == "X":
        x = oldvariables[0]
        y = oldvariables[1]
        z = oldvariables[2]
        w = oldvariables[3]
        X =   a[1] +   a[2]*x +   a[3]*np.power(x,2) +   a[4]*np.power(x,3) +   a[5]*np.power(x,4) +   a[6]*np.power(x,5) +   a[7]*np.power(x,4)*y +   a[8]*np.power(x,4)*z +   a[9]*np.power(x,4)*w +  a[10]*np.power(x,3)*y +  a[11]*np.power(x,3)*np.power(y,2) +  a[12]*np.power(x,3)*y*z +  a[13]*np.power(x,3)*y*w +  a[14]*np.power(x,3)*z +  a[15]*np.power(x,3)*np.power(z,2) +  a[16]*np.power(x,3)*z*w +  a[17]*np.power(x,3)*w +  a[18]*np.power(x,3)*np.power(w,2) +  a[19]*np.power(x,2)*y +  a[20]*np.power(x,2)*np.power(y,2) +  a[21]*np.power(x,2)*np.power(y,3) +  a[22]*np.power(x,2)*np.power(y,2)*z +  a[23]*np.power(x,2)*np.power(y,2)*w +  a[24]*np.power(x,2)*y*z +  a[25]*np.power(x,2)*y*np.power(z,2) +  a[26]*np.power(x,2)*y*z*w +  a[27]*np.power(x,2)*y*w +  a[28]*np.power(x,2)*y*np.power(w,2) +  a[29]*np.power(x,2)*z +  a[30]*np.power(x,2)*np.power(z,2) +  a[31]*np.power(x,2)*np.power(z,3) +  a[32]*np.power(x,2)*np.power(z,2)*w +  a[33]*np.power(x,2)*z*w +  a[34]*np.power(x,2)*z*np.power(w,2) +  a[35]*np.power(x,2)*w +  a[36]*np.power(x,2)*np.power(w,2) +  a[37]*np.power(x,2)*np.power(w,3) +  a[38]*x*y +  a[39]*x*np.power(y,2) +  a[40]*x*np.power(y,3) +  a[41]*x*np.power(y,4) +  a[42]*x*np.power(y,3)*z +  a[43]*x*np.power(y,3)*w +  a[44]*x*np.power(y,2)*z +  a[45]*x*np.power(y,2)*np.power(z,2) +  a[46]*x*np.power(y,2)*z*w +  a[47]*x*np.power(y,2)*w +  a[48]*x*np.power(y,2)*np.power(w,2) +  a[49]*x*y*z +  a[50]*x*y*np.power(z,2) +  a[51]*x*y*np.power(z,3) +  a[52]*x*y*np.power(z,2)*w +  a[53]*x*y*z*w +  a[54]*x*y*z*np.power(w,2) +  a[55]*x*y*w +  a[56]*x*y*np.power(w,2) +  a[57]*x*y*np.power(w,3) +  a[58]*x*z +  a[59]*x*np.power(z,2) +  a[60]*x*np.power(z,3) +  a[61]*x*np.power(z,4) +  a[62]*x*np.power(z,3)*w +  a[63]*x*np.power(z,2)*w +  a[64]*x*np.power(z,2)*np.power(w,2) +  a[65]*x*z*w +  a[66]*x*z*np.power(w,2) +  a[67]*x*z*np.power(w,3) +  a[68]*x*w +  a[69]*x*np.power(w,2) +  a[70]*x*np.power(w,3) +  a[71]*x*np.power(w,4) +  a[72]*y +  a[73]*np.power(y,2) +  a[74]*np.power(y,3) +  a[75]*np.power(y,4) +  a[76]*np.power(y,5) +  a[77]*np.power(y,4)*z +  a[78]*np.power(y,4)*w +  a[79]*np.power(y,3)*z +  a[80]*np.power(y,3)*np.power(z,2) +  a[81]*np.power(y,3)*z*w +  a[82]*np.power(y,3)*w +  a[83]*np.power(y,3)*np.power(w,2) +  a[84]*np.power(y,2)*z +  a[85]*np.power(y,2)*np.power(z,2) +  a[86]*np.power(y,2)*np.power(z,3) +  a[87]*np.power(y,2)*np.power(z,2)*w +  a[88]*np.power(y,2)*z*w +  a[89]*np.power(y,2)*z*np.power(w,2) +  a[90]*np.power(y,2)*w +  a[91]*np.power(y,2)*np.power(w,2) +  a[92]*np.power(y,2)*np.power(w,3) +  a[93]*y*z +  a[94]*y*np.power(z,2) +  a[95]*y*np.power(z,3) +  a[96]*y*np.power(z,4) +  a[97]*y*np.power(z,3)*w +  a[98]*y*np.power(z,2)*w +  a[99]*y*np.power(z,2)*np.power(w,2) + a[100]*y*z*w + a[101]*y*z*np.power(w,2) + a[102]*y*z*np.power(w,3) + a[103]*y*w + a[104]*y*np.power(w,2) + a[105]*y*np.power(w,3) + a[106]*y*np.power(w,4) + a[107]*z + a[108]*np.power(z,2) + a[109]*np.power(z,3) + a[110]*np.power(z,4) + a[111]*np.power(z,5) + a[112]*np.power(z,4)*w + a[113]*np.power(z,3)*w + a[114]*np.power(z,3)*np.power(w,2) + a[115]*np.power(z,2)*w + a[116]*np.power(z,2)*np.power(w,2) + a[117]*np.power(z,2)*np.power(w,3) + a[118]*z*w + a[119]*z*np.power(w,2) + a[120]*z*np.power(w,3) + a[121]*z*np.power(w,4) + a[122]*w + a[123]*np.power(w,2) + a[124]*np.power(w,3) + a[125]*np.power(w,4) + a[126]*np.power(w,5)
        Y = a[127] + a[128]*x + a[129]*np.power(x,2) + a[130]*np.power(x,3) + a[131]*np.power(x,4) + a[132]*np.power(x,5) + a[133]*np.power(x,4)*y + a[134]*np.power(x,4)*z + a[135]*np.power(x,4)*w + a[136]*np.power(x,3)*y + a[137]*np.power(x,3)*np.power(y,2) + a[138]*np.power(x,3)*y*z + a[139]*np.power(x,3)*y*w + a[140]*np.power(x,3)*z + a[141]*np.power(x,3)*np.power(z,2) + a[142]*np.power(x,3)*z*w + a[143]*np.power(x,3)*w + a[144]*np.power(x,3)*np.power(w,2) + a[145]*np.power(x,2)*y + a[146]*np.power(x,2)*np.power(y,2) + a[147]*np.power(x,2)*np.power(y,3) + a[148]*np.power(x,2)*np.power(y,2)*z + a[149]*np.power(x,2)*np.power(y,2)*w + a[150]*np.power(x,2)*y*z + a[151]*np.power(x,2)*y*np.power(z,2) + a[152]*np.power(x,2)*y*z*w + a[153]*np.power(x,2)*y*w + a[154]*np.power(x,2)*y*np.power(w,2) + a[155]*np.power(x,2)*z + a[156]*np.power(x,2)*np.power(z,2) + a[157]*np.power(x,2)*np.power(z,3) + a[158]*np.power(x,2)*np.power(z,2)*w + a[159]*np.power(x,2)*z*w + a[160]*np.power(x,2)*z*np.power(w,2) + a[161]*np.power(x,2)*w + a[162]*np.power(x,2)*np.power(w,2) + a[163]*np.power(x,2)*np.power(w,3) + a[164]*x*y + a[165]*x*np.power(y,2) + a[166]*x*np.power(y,3) + a[167]*x*np.power(y,4) + a[168]*x*np.power(y,3)*z + a[169]*x*np.power(y,3)*w + a[170]*x*np.power(y,2)*z + a[171]*x*np.power(y,2)*np.power(z,2) + a[172]*x*np.power(y,2)*z*w + a[173]*x*np.power(y,2)*w + a[174]*x*np.power(y,2)*np.power(w,2) + a[175]*x*y*z + a[176]*x*y*np.power(z,2) + a[177]*x*y*np.power(z,3) + a[178]*x*y*np.power(z,2)*w + a[179]*x*y*z*w + a[180]*x*y*z*np.power(w,2) + a[181]*x*y*w + a[182]*x*y*np.power(w,2) + a[183]*x*y*np.power(w,3) + a[184]*x*z + a[185]*x*np.power(z,2) + a[186]*x*np.power(z,3) + a[187]*x*np.power(z,4) + a[188]*x*np.power(z,3)*w + a[189]*x*np.power(z,2)*w + a[190]*x*np.power(z,2)*np.power(w,2) + a[191]*x*z*w + a[192]*x*z*np.power(w,2) + a[193]*x*z*np.power(w,3) + a[194]*x*w + a[195]*x*np.power(w,2) + a[196]*x*np.power(w,3) + a[197]*x*np.power(w,4) + a[198]*y + a[199]*np.power(y,2) + a[200]*np.power(y,3) + a[201]*np.power(y,4) + a[202]*np.power(y,5) + a[203]*np.power(y,4)*z + a[204]*np.power(y,4)*w + a[205]*np.power(y,3)*z + a[206]*np.power(y,3)*np.power(z,2) + a[207]*np.power(y,3)*z*w + a[208]*np.power(y,3)*w + a[209]*np.power(y,3)*np.power(w,2) + a[210]*np.power(y,2)*z + a[211]*np.power(y,2)*np.power(z,2) + a[212]*np.power(y,2)*np.power(z,3) + a[213]*np.power(y,2)*np.power(z,2)*w + a[214]*np.power(y,2)*z*w + a[215]*np.power(y,2)*z*np.power(w,2) + a[216]*np.power(y,2)*w + a[217]*np.power(y,2)*np.power(w,2) + a[218]*np.power(y,2)*np.power(w,3) + a[219]*y*z + a[220]*y*np.power(z,2) + a[221]*y*np.power(z,3) + a[222]*y*np.power(z,4) + a[223]*y*np.power(z,3)*w + a[224]*y*np.power(z,2)*w + a[225]*y*np.power(z,2)*np.power(w,2) + a[226]*y*z*w + a[227]*y*z*np.power(w,2) + a[228]*y*z*np.power(w,3) + a[229]*y*w + a[230]*y*np.power(w,2) + a[231]*y*np.power(w,3) + a[232]*y*np.power(w,4) + a[233]*z + a[234]*np.power(z,2) + a[235]*np.power(z,3) + a[236]*np.power(z,4) + a[237]*np.power(z,5) + a[238]*np.power(z,4)*w + a[239]*np.power(z,3)*w + a[240]*np.power(z,3)*np.power(w,2) + a[241]*np.power(z,2)*w + a[242]*np.power(z,2)*np.power(w,2) + a[243]*np.power(z,2)*np.power(w,3) + a[244]*z*w + a[245]*z*np.power(w,2) + a[246]*z*np.power(w,3) + a[247]*z*np.power(w,4) + a[248]*w + a[249]*np.power(w,2) + a[250]*np.power(w,3) + a[251]*np.power(w,4) + a[252]*np.power(w,5)
        Z = a[253] + a[254]*x + a[255]*np.power(x,2) + a[256]*np.power(x,3) + a[257]*np.power(x,4) + a[258]*np.power(x,5) + a[259]*np.power(x,4)*y + a[260]*np.power(x,4)*z + a[261]*np.power(x,4)*w + a[262]*np.power(x,3)*y + a[263]*np.power(x,3)*np.power(y,2) + a[264]*np.power(x,3)*y*z + a[265]*np.power(x,3)*y*w + a[266]*np.power(x,3)*z + a[267]*np.power(x,3)*np.power(z,2) + a[268]*np.power(x,3)*z*w + a[269]*np.power(x,3)*w + a[270]*np.power(x,3)*np.power(w,2) + a[271]*np.power(x,2)*y + a[272]*np.power(x,2)*np.power(y,2) + a[273]*np.power(x,2)*np.power(y,3) + a[274]*np.power(x,2)*np.power(y,2)*z + a[275]*np.power(x,2)*np.power(y,2)*w + a[276]*np.power(x,2)*y*z + a[277]*np.power(x,2)*y*np.power(z,2) + a[278]*np.power(x,2)*y*z*w + a[279]*np.power(x,2)*y*w + a[280]*np.power(x,2)*y*np.power(w,2) + a[281]*np.power(x,2)*z + a[282]*np.power(x,2)*np.power(z,2) + a[283]*np.power(x,2)*np.power(z,3) + a[284]*np.power(x,2)*np.power(z,2)*w + a[285]*np.power(x,2)*z*w + a[286]*np.power(x,2)*z*np.power(w,2) + a[287]*np.power(x,2)*w + a[288]*np.power(x,2)*np.power(w,2) + a[289]*np.power(x,2)*np.power(w,3) + a[290]*x*y + a[291]*x*np.power(y,2) + a[292]*x*np.power(y,3) + a[293]*x*np.power(y,4) + a[294]*x*np.power(y,3)*z + a[295]*x*np.power(y,3)*w + a[296]*x*np.power(y,2)*z + a[297]*x*np.power(y,2)*np.power(z,2) + a[298]*x*np.power(y,2)*z*w + a[299]*x*np.power(y,2)*w + a[300]*x*np.power(y,2)*np.power(w,2) + a[301]*x*y*z + a[302]*x*y*np.power(z,2) + a[303]*x*y*np.power(z,3) + a[304]*x*y*np.power(z,2)*w + a[305]*x*y*z*w + a[305]*x*y*z*np.power(w,2) + a[307]*x*y*w + a[308]*x*y*np.power(w,2) + a[309]*x*y*np.power(w,3) + a[310]*x*z + a[311]*x*np.power(z,2) + a[312]*x*np.power(z,3) + a[313]*x*np.power(z,4) + a[314]*x*np.power(z,3)*w + a[315]*x*np.power(z,2)*w + a[316]*x*np.power(z,2)*np.power(w,2) + a[317]*x*z*w + a[318]*x*z*np.power(w,2) + a[319]*x*z*np.power(w,3) + a[320]*x*w + a[321]*x*np.power(w,2) + a[322]*x*np.power(w,3) + a[323]*x*np.power(w,4) + a[324]*y + a[325]*np.power(y,2) + a[326]*np.power(y,3) + a[327]*np.power(y,4) + a[328]*np.power(y,5) + a[329]*np.power(y,4)*z + a[330]*np.power(y,4)*w + a[331]*np.power(y,3)*z + a[332]*np.power(y,3)*np.power(z,2) + a[333]*np.power(y,3)*z*w + a[334]*np.power(y,3)*w + a[335]*np.power(y,3)*np.power(w,2) + a[336]*np.power(y,2)*z + a[337]*np.power(y,2)*np.power(z,2) + a[338]*np.power(y,2)*np.power(z,3) + a[339]*np.power(y,2)*np.power(z,2)*w + a[340]*np.power(y,2)*z*w + a[341]*np.power(y,2)*z*np.power(w,2) + a[342]*np.power(y,2)*w + a[343]*np.power(y,2)*np.power(w,2) + a[344]*np.power(y,2)*np.power(w,3) + a[345]*y*z + a[346]*y*np.power(z,2) + a[347]*y*np.power(z,3) + a[348]*y*np.power(z,4) + a[349]*y*np.power(z,3)*w + a[350]*y*np.power(z,2)*w + a[351]*y*np.power(z,2)*np.power(w,2) + a[352]*y*z*w + a[353]*y*z*np.power(w,2) + a[354]*y*z*np.power(w,3) + a[355]*y*w + a[356]*y*np.power(w,2) + a[357]*y*np.power(w,3) + a[358]*y*np.power(w,4) + a[359]*z + a[360]*np.power(z,2) + a[361]*np.power(z,3) + a[362]*np.power(z,4) + a[363]*np.power(z,5) + a[364]*np.power(z,4)*w + a[365]*np.power(z,3)*w + a[366]*np.power(z,3)*np.power(w,2) + a[367]*np.power(z,2)*w + a[368]*np.power(z,2)*np.power(w,2) + a[369]*np.power(z,2)*np.power(w,3) + a[370]*z*w + a[371]*z*np.power(w,2) + a[372]*z*np.power(w,3) + a[373]*z*np.power(w,4) + a[374]*w + a[375]*np.power(w,2) + a[376]*np.power(w,3) + a[377]*np.power(w,4) + a[378]*np.power(w,5)
        W = a[379] + a[380]*x + a[381]*np.power(x,2) + a[382]*np.power(x,3) + a[383]*np.power(x,4) + a[384]*np.power(x,5) + a[385]*np.power(x,4)*y + a[386]*np.power(x,4)*z + a[387]*np.power(x,4)*w + a[388]*np.power(x,3)*y + a[389]*np.power(x,3)*np.power(y,2) + a[390]*np.power(x,3)*y*z + a[391]*np.power(x,3)*y*w + a[392]*np.power(x,3)*z + a[393]*np.power(x,3)*np.power(z,2) + a[394]*np.power(x,3)*z*w + a[395]*np.power(x,3)*w + a[396]*np.power(x,3)*np.power(w,2) + a[397]*np.power(x,2)*y + a[398]*np.power(x,2)*np.power(y,2) + a[399]*np.power(x,2)*np.power(y,3) + a[400]*np.power(x,2)*np.power(y,2)*z + a[401]*np.power(x,2)*np.power(y,2)*w + a[402]*np.power(x,2)*y*z + a[403]*np.power(x,2)*y*np.power(z,2) + a[404]*np.power(x,2)*y*z*w + a[405]*np.power(x,2)*y*w + a[406]*np.power(x,2)*y*np.power(w,2) + a[407]*np.power(x,2)*z + a[408]*np.power(x,2)*np.power(z,2) + a[409]*np.power(x,2)*np.power(z,3) + a[410]*np.power(x,2)*np.power(z,2)*w + a[411]*np.power(x,2)*z*w + a[412]*np.power(x,2)*z*np.power(w,2) + a[413]*np.power(x,2)*w + a[414]*np.power(x,2)*np.power(w,2) + a[415]*np.power(x,2)*np.power(w,3) + a[416]*x*y + a[417]*x*np.power(y,2) + a[418]*x*np.power(y,3) + a[419]*x*np.power(y,4) + a[420]*x*np.power(y,3)*z + a[421]*x*np.power(y,3)*w + a[422]*x*np.power(y,2)*z + a[423]*x*np.power(y,2)*np.power(z,2) + a[424]*x*np.power(y,2)*z*w + a[425]*x*np.power(y,2)*w + a[426]*x*np.power(y,2)*np.power(w,2) + a[427]*x*y*z + a[428]*x*y*np.power(z,2) + a[429]*x*y*np.power(z,3) + a[430]*x*y*np.power(z,2)*w + a[431]*x*y*z*w + a[432]*x*y*z*np.power(w,2) + a[433]*x*y*w + a[434]*x*y*np.power(w,2) + a[435]*x*y*np.power(w,3) + a[436]*x*z + a[437]*x*np.power(z,2) + a[438]*x*np.power(z,3) + a[439]*x*np.power(z,4) + a[440]*x*np.power(z,3)*w + a[441]*x*np.power(z,2)*w + a[442]*x*np.power(z,2)*np.power(w,2) + a[443]*x*z*w + a[444]*x*z*np.power(w,2) + a[445]*x*z*np.power(w,3) + a[446]*x*w + a[447]*x*np.power(w,2) + a[448]*x*np.power(w,3) + a[449]*x*np.power(w,4) + a[450]*y + a[451]*np.power(y,2) + a[452]*np.power(y,3) + a[453]*np.power(y,4) + a[454]*np.power(y,5) + a[455]*np.power(y,4)*z + a[456]*np.power(y,4)*w + a[457]*np.power(y,3)*z + a[458]*np.power(y,3)*np.power(z,2) + a[459]*np.power(y,3)*z*w + a[460]*np.power(y,3)*w + a[461]*np.power(y,3)*np.power(w,2) + a[462]*np.power(y,2)*z + a[463]*np.power(y,2)*np.power(z,2) + a[464]*np.power(y,2)*np.power(z,3) + a[465]*np.power(y,2)*np.power(z,2)*w + a[466]*np.power(y,2)*z*w + a[467]*np.power(y,2)*z*np.power(w,2) + a[468]*np.power(y,2)*w + a[469]*np.power(y,2)*np.power(w,2) + a[470]*np.power(y,2)*np.power(w,3) + a[471]*y*z + a[472]*y*np.power(z,2) + a[473]*y*np.power(z,3) + a[474]*y*np.power(z,4) + a[475]*y*np.power(z,3)*w + a[476]*y*np.power(z,2)*w + a[477]*y*np.power(z,2)*np.power(w,2) + a[478]*y*z*w + a[479]*y*z*np.power(w,2) + a[480]*y*z*np.power(w,3) + a[481]*y*w + a[482]*y*np.power(w,2) + a[483]*y*np.power(w,3) + a[484]*y*np.power(w,4) + a[485]*z + a[486]*np.power(z,2) + a[487]*np.power(z,3) + a[488]*np.power(z,4) + a[489]*np.power(z,5) + a[490]*np.power(z,4)*w + a[491]*np.power(z,3)*w + a[492]*np.power(z,3)*np.power(w,2) + a[493]*np.power(z,2)*w + a[494]*np.power(z,2)*np.power(w,2) + a[495]*np.power(z,2)*np.power(w,3) + a[496]*z*w + a[497]*z*np.power(w,2) + a[498]*z*np.power(w,3) + a[499]*z*np.power(w,4) + a[500]*w + a[501]*np.power(w,2) + a[502]*np.power(w,3) + a[503]*np.power(w,4) + a[504]*np.power(w,5)
        X = x + epsilon * X
        Y = y + epsilon * Y
        Z = z + epsilon * Z
        W = w + epsilon * W
        variables = (X,Y,Z,W)

    """
    # Y
    X = a[1] + a[2]*x + a[3]*y + a[4]|X| + a[5]|Y|
    Y = a[6] + a[7]*x + a[8]*y + a[9]|X| + a[10]|Y|
    Z = *np.power(x,2) + *np.power(y,2)
    # Z
    X = a[1] + a[2]*x + a[3]*y + a[4]*x AND a[5]*y + a[6]*x OR a[7]*y
    Y = a[8] + a[9]*x + a[10]*y + a[11]*x AND a[12]*y + a[13]*x OR a[14]*y
    Z = *np.power(x,2) + *np.power(y,2)
    # [
        X = a[1] + a[2]*x + a[3]*y + a[4]|X|a[5] + a[6]|Y|a[7]
    Y = a[8] + a[9]*x + a[10]*y + a[11]|X|a[12 ]+ a[13]|Y|a[14]
    Z = *np.power(x,2) + *np.power(y,2)
    # \
        X = a[1] + a[2]*x + a[3]*y + a[4]sin(a[5]*x + a[6) + a[7]sin(a[8]*y + a[9])
    Y = a[10] + a[11]*x + a[12]*y + a[13]sin(a[14]*x + a[15) + a[16]sin(a[17]*y + a[18])
    Z = *np.power(x,2) + *np.power(y,2)
    # ]
    X = 10a[1] + [X + a[2sin(a[3]*y+a[4])]cos[2p/(13+10a[6])] + Y sin[2p/(13+10a[6])]
    Y = 10a[5] - [X + a[2sin(a[3]*y + a[4])]sin[2p/(13+10a[6])] + Y cos[2p/(13+10a[6])]
    Z = *np.power(x,2) + *np.power(y,2)
    # ^
    X = X + 0.1a[1]*y
    Y = Y + 0.1(a[2]*x + a[3]*np.power(x,3) + a[4]*np.power(x,2)*y + a[5]*x*np.power(y,2) + a[6]*y + a[7]*np.power(y,3) + a[8]sin Z
    Z = [Z + 0.1(a[9] + 1.3)] mod 2p
    """
    return variables